[
	/+
		Source: <https://html.spec.whatwg.org/entities.json>
	 +/
	"&AElig": (cast(dchar[])[198]).text,
	"&AElig;": (cast(dchar[])[198]).text,
	"&AMP": (cast(dchar[])[38]).text,
	"&AMP;": (cast(dchar[])[38]).text,
	"&Aacute": (cast(dchar[])[193]).text,
	"&Aacute;": (cast(dchar[])[193]).text,
	"&Abreve;": (cast(dchar[])[258]).text,
	"&Acirc": (cast(dchar[])[194]).text,
	"&Acirc;": (cast(dchar[])[194]).text,
	"&Acy;": (cast(dchar[])[1040]).text,
	"&Afr;": (cast(dchar[])[120068]).text,
	"&Agrave": (cast(dchar[])[192]).text,
	"&Agrave;": (cast(dchar[])[192]).text,
	"&Alpha;": (cast(dchar[])[913]).text,
	"&Amacr;": (cast(dchar[])[256]).text,
	"&And;": (cast(dchar[])[10835]).text,
	"&Aogon;": (cast(dchar[])[260]).text,
	"&Aopf;": (cast(dchar[])[120120]).text,
	"&ApplyFunction;": (cast(dchar[])[8289]).text,
	"&Aring": (cast(dchar[])[197]).text,
	"&Aring;": (cast(dchar[])[197]).text,
	"&Ascr;": (cast(dchar[])[119964]).text,
	"&Assign;": (cast(dchar[])[8788]).text,
	"&Atilde": (cast(dchar[])[195]).text,
	"&Atilde;": (cast(dchar[])[195]).text,
	"&Auml": (cast(dchar[])[196]).text,
	"&Auml;": (cast(dchar[])[196]).text,
	"&Backslash;": (cast(dchar[])[8726]).text,
	"&Barv;": (cast(dchar[])[10983]).text,
	"&Barwed;": (cast(dchar[])[8966]).text,
	"&Bcy;": (cast(dchar[])[1041]).text,
	"&Because;": (cast(dchar[])[8757]).text,
	"&Bernoullis;": (cast(dchar[])[8492]).text,
	"&Beta;": (cast(dchar[])[914]).text,
	"&Bfr;": (cast(dchar[])[120069]).text,
	"&Bopf;": (cast(dchar[])[120121]).text,
	"&Breve;": (cast(dchar[])[728]).text,
	"&Bscr;": (cast(dchar[])[8492]).text,
	"&Bumpeq;": (cast(dchar[])[8782]).text,
	"&CHcy;": (cast(dchar[])[1063]).text,
	"&COPY": (cast(dchar[])[169]).text,
	"&COPY;": (cast(dchar[])[169]).text,
	"&Cacute;": (cast(dchar[])[262]).text,
	"&Cap;": (cast(dchar[])[8914]).text,
	"&CapitalDifferentialD;": (cast(dchar[])[8517]).text,
	"&Cayleys;": (cast(dchar[])[8493]).text,
	"&Ccaron;": (cast(dchar[])[268]).text,
	"&Ccedil": (cast(dchar[])[199]).text,
	"&Ccedil;": (cast(dchar[])[199]).text,
	"&Ccirc;": (cast(dchar[])[264]).text,
	"&Cconint;": (cast(dchar[])[8752]).text,
	"&Cdot;": (cast(dchar[])[266]).text,
	"&Cedilla;": (cast(dchar[])[184]).text,
	"&CenterDot;": (cast(dchar[])[183]).text,
	"&Cfr;": (cast(dchar[])[8493]).text,
	"&Chi;": (cast(dchar[])[935]).text,
	"&CircleDot;": (cast(dchar[])[8857]).text,
	"&CircleMinus;": (cast(dchar[])[8854]).text,
	"&CirclePlus;": (cast(dchar[])[8853]).text,
	"&CircleTimes;": (cast(dchar[])[8855]).text,
	"&ClockwiseContourIntegral;": (cast(dchar[])[8754]).text,
	"&CloseCurlyDoubleQuote;": (cast(dchar[])[8221]).text,
	"&CloseCurlyQuote;": (cast(dchar[])[8217]).text,
	"&Colon;": (cast(dchar[])[8759]).text,
	"&Colone;": (cast(dchar[])[10868]).text,
	"&Congruent;": (cast(dchar[])[8801]).text,
	"&Conint;": (cast(dchar[])[8751]).text,
	"&ContourIntegral;": (cast(dchar[])[8750]).text,
	"&Copf;": (cast(dchar[])[8450]).text,
	"&Coproduct;": (cast(dchar[])[8720]).text,
	"&CounterClockwiseContourIntegral;": (cast(dchar[])[8755]).text,
	"&Cross;": (cast(dchar[])[10799]).text,
	"&Cscr;": (cast(dchar[])[119966]).text,
	"&Cup;": (cast(dchar[])[8915]).text,
	"&CupCap;": (cast(dchar[])[8781]).text,
	"&DD;": (cast(dchar[])[8517]).text,
	"&DDotrahd;": (cast(dchar[])[10513]).text,
	"&DJcy;": (cast(dchar[])[1026]).text,
	"&DScy;": (cast(dchar[])[1029]).text,
	"&DZcy;": (cast(dchar[])[1039]).text,
	"&Dagger;": (cast(dchar[])[8225]).text,
	"&Darr;": (cast(dchar[])[8609]).text,
	"&Dashv;": (cast(dchar[])[10980]).text,
	"&Dcaron;": (cast(dchar[])[270]).text,
	"&Dcy;": (cast(dchar[])[1044]).text,
	"&Del;": (cast(dchar[])[8711]).text,
	"&Delta;": (cast(dchar[])[916]).text,
	"&Dfr;": (cast(dchar[])[120071]).text,
	"&DiacriticalAcute;": (cast(dchar[])[180]).text,
	"&DiacriticalDot;": (cast(dchar[])[729]).text,
	"&DiacriticalDoubleAcute;": (cast(dchar[])[733]).text,
	"&DiacriticalGrave;": (cast(dchar[])[96]).text,
	"&DiacriticalTilde;": (cast(dchar[])[732]).text,
	"&Diamond;": (cast(dchar[])[8900]).text,
	"&DifferentialD;": (cast(dchar[])[8518]).text,
	"&Dopf;": (cast(dchar[])[120123]).text,
	"&Dot;": (cast(dchar[])[168]).text,
	"&DotDot;": (cast(dchar[])[8412]).text,
	"&DotEqual;": (cast(dchar[])[8784]).text,
	"&DoubleContourIntegral;": (cast(dchar[])[8751]).text,
	"&DoubleDot;": (cast(dchar[])[168]).text,
	"&DoubleDownArrow;": (cast(dchar[])[8659]).text,
	"&DoubleLeftArrow;": (cast(dchar[])[8656]).text,
	"&DoubleLeftRightArrow;": (cast(dchar[])[8660]).text,
	"&DoubleLeftTee;": (cast(dchar[])[10980]).text,
	"&DoubleLongLeftArrow;": (cast(dchar[])[10232]).text,
	"&DoubleLongLeftRightArrow;": (cast(dchar[])[10234]).text,
	"&DoubleLongRightArrow;": (cast(dchar[])[10233]).text,
	"&DoubleRightArrow;": (cast(dchar[])[8658]).text,
	"&DoubleRightTee;": (cast(dchar[])[8872]).text,
	"&DoubleUpArrow;": (cast(dchar[])[8657]).text,
	"&DoubleUpDownArrow;": (cast(dchar[])[8661]).text,
	"&DoubleVerticalBar;": (cast(dchar[])[8741]).text,
	"&DownArrow;": (cast(dchar[])[8595]).text,
	"&DownArrowBar;": (cast(dchar[])[10515]).text,
	"&DownArrowUpArrow;": (cast(dchar[])[8693]).text,
	"&DownBreve;": (cast(dchar[])[785]).text,
	"&DownLeftRightVector;": (cast(dchar[])[10576]).text,
	"&DownLeftTeeVector;": (cast(dchar[])[10590]).text,
	"&DownLeftVector;": (cast(dchar[])[8637]).text,
	"&DownLeftVectorBar;": (cast(dchar[])[10582]).text,
	"&DownRightTeeVector;": (cast(dchar[])[10591]).text,
	"&DownRightVector;": (cast(dchar[])[8641]).text,
	"&DownRightVectorBar;": (cast(dchar[])[10583]).text,
	"&DownTee;": (cast(dchar[])[8868]).text,
	"&DownTeeArrow;": (cast(dchar[])[8615]).text,
	"&Downarrow;": (cast(dchar[])[8659]).text,
	"&Dscr;": (cast(dchar[])[119967]).text,
	"&Dstrok;": (cast(dchar[])[272]).text,
	"&ENG;": (cast(dchar[])[330]).text,
	"&ETH": (cast(dchar[])[208]).text,
	"&ETH;": (cast(dchar[])[208]).text,
	"&Eacute": (cast(dchar[])[201]).text,
	"&Eacute;": (cast(dchar[])[201]).text,
	"&Ecaron;": (cast(dchar[])[282]).text,
	"&Ecirc": (cast(dchar[])[202]).text,
	"&Ecirc;": (cast(dchar[])[202]).text,
	"&Ecy;": (cast(dchar[])[1069]).text,
	"&Edot;": (cast(dchar[])[278]).text,
	"&Efr;": (cast(dchar[])[120072]).text,
	"&Egrave": (cast(dchar[])[200]).text,
	"&Egrave;": (cast(dchar[])[200]).text,
	"&Element;": (cast(dchar[])[8712]).text,
	"&Emacr;": (cast(dchar[])[274]).text,
	"&EmptySmallSquare;": (cast(dchar[])[9723]).text,
	"&EmptyVerySmallSquare;": (cast(dchar[])[9643]).text,
	"&Eogon;": (cast(dchar[])[280]).text,
	"&Eopf;": (cast(dchar[])[120124]).text,
	"&Epsilon;": (cast(dchar[])[917]).text,
	"&Equal;": (cast(dchar[])[10869]).text,
	"&EqualTilde;": (cast(dchar[])[8770]).text,
	"&Equilibrium;": (cast(dchar[])[8652]).text,
	"&Escr;": (cast(dchar[])[8496]).text,
	"&Esim;": (cast(dchar[])[10867]).text,
	"&Eta;": (cast(dchar[])[919]).text,
	"&Euml": (cast(dchar[])[203]).text,
	"&Euml;": (cast(dchar[])[203]).text,
	"&Exists;": (cast(dchar[])[8707]).text,
	"&ExponentialE;": (cast(dchar[])[8519]).text,
	"&Fcy;": (cast(dchar[])[1060]).text,
	"&Ffr;": (cast(dchar[])[120073]).text,
	"&FilledSmallSquare;": (cast(dchar[])[9724]).text,
	"&FilledVerySmallSquare;": (cast(dchar[])[9642]).text,
	"&Fopf;": (cast(dchar[])[120125]).text,
	"&ForAll;": (cast(dchar[])[8704]).text,
	"&Fouriertrf;": (cast(dchar[])[8497]).text,
	"&Fscr;": (cast(dchar[])[8497]).text,
	"&GJcy;": (cast(dchar[])[1027]).text,
	"&GT": (cast(dchar[])[62]).text,
	"&GT;": (cast(dchar[])[62]).text,
	"&Gamma;": (cast(dchar[])[915]).text,
	"&Gammad;": (cast(dchar[])[988]).text,
	"&Gbreve;": (cast(dchar[])[286]).text,
	"&Gcedil;": (cast(dchar[])[290]).text,
	"&Gcirc;": (cast(dchar[])[284]).text,
	"&Gcy;": (cast(dchar[])[1043]).text,
	"&Gdot;": (cast(dchar[])[288]).text,
	"&Gfr;": (cast(dchar[])[120074]).text,
	"&Gg;": (cast(dchar[])[8921]).text,
	"&Gopf;": (cast(dchar[])[120126]).text,
	"&GreaterEqual;": (cast(dchar[])[8805]).text,
	"&GreaterEqualLess;": (cast(dchar[])[8923]).text,
	"&GreaterFullEqual;": (cast(dchar[])[8807]).text,
	"&GreaterGreater;": (cast(dchar[])[10914]).text,
	"&GreaterLess;": (cast(dchar[])[8823]).text,
	"&GreaterSlantEqual;": (cast(dchar[])[10878]).text,
	"&GreaterTilde;": (cast(dchar[])[8819]).text,
	"&Gscr;": (cast(dchar[])[119970]).text,
	"&Gt;": (cast(dchar[])[8811]).text,
	"&HARDcy;": (cast(dchar[])[1066]).text,
	"&Hacek;": (cast(dchar[])[711]).text,
	"&Hat;": (cast(dchar[])[94]).text,
	"&Hcirc;": (cast(dchar[])[292]).text,
	"&Hfr;": (cast(dchar[])[8460]).text,
	"&HilbertSpace;": (cast(dchar[])[8459]).text,
	"&Hopf;": (cast(dchar[])[8461]).text,
	"&HorizontalLine;": (cast(dchar[])[9472]).text,
	"&Hscr;": (cast(dchar[])[8459]).text,
	"&Hstrok;": (cast(dchar[])[294]).text,
	"&HumpDownHump;": (cast(dchar[])[8782]).text,
	"&HumpEqual;": (cast(dchar[])[8783]).text,
	"&IEcy;": (cast(dchar[])[1045]).text,
	"&IJlig;": (cast(dchar[])[306]).text,
	"&IOcy;": (cast(dchar[])[1025]).text,
	"&Iacute": (cast(dchar[])[205]).text,
	"&Iacute;": (cast(dchar[])[205]).text,
	"&Icirc": (cast(dchar[])[206]).text,
	"&Icirc;": (cast(dchar[])[206]).text,
	"&Icy;": (cast(dchar[])[1048]).text,
	"&Idot;": (cast(dchar[])[304]).text,
	"&Ifr;": (cast(dchar[])[8465]).text,
	"&Igrave": (cast(dchar[])[204]).text,
	"&Igrave;": (cast(dchar[])[204]).text,
	"&Im;": (cast(dchar[])[8465]).text,
	"&Imacr;": (cast(dchar[])[298]).text,
	"&ImaginaryI;": (cast(dchar[])[8520]).text,
	"&Implies;": (cast(dchar[])[8658]).text,
	"&Int;": (cast(dchar[])[8748]).text,
	"&Integral;": (cast(dchar[])[8747]).text,
	"&Intersection;": (cast(dchar[])[8898]).text,
	"&InvisibleComma;": (cast(dchar[])[8291]).text,
	"&InvisibleTimes;": (cast(dchar[])[8290]).text,
	"&Iogon;": (cast(dchar[])[302]).text,
	"&Iopf;": (cast(dchar[])[120128]).text,
	"&Iota;": (cast(dchar[])[921]).text,
	"&Iscr;": (cast(dchar[])[8464]).text,
	"&Itilde;": (cast(dchar[])[296]).text,
	"&Iukcy;": (cast(dchar[])[1030]).text,
	"&Iuml": (cast(dchar[])[207]).text,
	"&Iuml;": (cast(dchar[])[207]).text,
	"&Jcirc;": (cast(dchar[])[308]).text,
	"&Jcy;": (cast(dchar[])[1049]).text,
	"&Jfr;": (cast(dchar[])[120077]).text,
	"&Jopf;": (cast(dchar[])[120129]).text,
	"&Jscr;": (cast(dchar[])[119973]).text,
	"&Jsercy;": (cast(dchar[])[1032]).text,
	"&Jukcy;": (cast(dchar[])[1028]).text,
	"&KHcy;": (cast(dchar[])[1061]).text,
	"&KJcy;": (cast(dchar[])[1036]).text,
	"&Kappa;": (cast(dchar[])[922]).text,
	"&Kcedil;": (cast(dchar[])[310]).text,
	"&Kcy;": (cast(dchar[])[1050]).text,
	"&Kfr;": (cast(dchar[])[120078]).text,
	"&Kopf;": (cast(dchar[])[120130]).text,
	"&Kscr;": (cast(dchar[])[119974]).text,
	"&LJcy;": (cast(dchar[])[1033]).text,
	"&LT": (cast(dchar[])[60]).text,
	"&LT;": (cast(dchar[])[60]).text,
	"&Lacute;": (cast(dchar[])[313]).text,
	"&Lambda;": (cast(dchar[])[923]).text,
	"&Lang;": (cast(dchar[])[10218]).text,
	"&Laplacetrf;": (cast(dchar[])[8466]).text,
	"&Larr;": (cast(dchar[])[8606]).text,
	"&Lcaron;": (cast(dchar[])[317]).text,
	"&Lcedil;": (cast(dchar[])[315]).text,
	"&Lcy;": (cast(dchar[])[1051]).text,
	"&LeftAngleBracket;": (cast(dchar[])[10216]).text,
	"&LeftArrow;": (cast(dchar[])[8592]).text,
	"&LeftArrowBar;": (cast(dchar[])[8676]).text,
	"&LeftArrowRightArrow;": (cast(dchar[])[8646]).text,
	"&LeftCeiling;": (cast(dchar[])[8968]).text,
	"&LeftDoubleBracket;": (cast(dchar[])[10214]).text,
	"&LeftDownTeeVector;": (cast(dchar[])[10593]).text,
	"&LeftDownVector;": (cast(dchar[])[8643]).text,
	"&LeftDownVectorBar;": (cast(dchar[])[10585]).text,
	"&LeftFloor;": (cast(dchar[])[8970]).text,
	"&LeftRightArrow;": (cast(dchar[])[8596]).text,
	"&LeftRightVector;": (cast(dchar[])[10574]).text,
	"&LeftTee;": (cast(dchar[])[8867]).text,
	"&LeftTeeArrow;": (cast(dchar[])[8612]).text,
	"&LeftTeeVector;": (cast(dchar[])[10586]).text,
	"&LeftTriangle;": (cast(dchar[])[8882]).text,
	"&LeftTriangleBar;": (cast(dchar[])[10703]).text,
	"&LeftTriangleEqual;": (cast(dchar[])[8884]).text,
	"&LeftUpDownVector;": (cast(dchar[])[10577]).text,
	"&LeftUpTeeVector;": (cast(dchar[])[10592]).text,
	"&LeftUpVector;": (cast(dchar[])[8639]).text,
	"&LeftUpVectorBar;": (cast(dchar[])[10584]).text,
	"&LeftVector;": (cast(dchar[])[8636]).text,
	"&LeftVectorBar;": (cast(dchar[])[10578]).text,
	"&Leftarrow;": (cast(dchar[])[8656]).text,
	"&Leftrightarrow;": (cast(dchar[])[8660]).text,
	"&LessEqualGreater;": (cast(dchar[])[8922]).text,
	"&LessFullEqual;": (cast(dchar[])[8806]).text,
	"&LessGreater;": (cast(dchar[])[8822]).text,
	"&LessLess;": (cast(dchar[])[10913]).text,
	"&LessSlantEqual;": (cast(dchar[])[10877]).text,
	"&LessTilde;": (cast(dchar[])[8818]).text,
	"&Lfr;": (cast(dchar[])[120079]).text,
	"&Ll;": (cast(dchar[])[8920]).text,
	"&Lleftarrow;": (cast(dchar[])[8666]).text,
	"&Lmidot;": (cast(dchar[])[319]).text,
	"&LongLeftArrow;": (cast(dchar[])[10229]).text,
	"&LongLeftRightArrow;": (cast(dchar[])[10231]).text,
	"&LongRightArrow;": (cast(dchar[])[10230]).text,
	"&Longleftarrow;": (cast(dchar[])[10232]).text,
	"&Longleftrightarrow;": (cast(dchar[])[10234]).text,
	"&Longrightarrow;": (cast(dchar[])[10233]).text,
	"&Lopf;": (cast(dchar[])[120131]).text,
	"&LowerLeftArrow;": (cast(dchar[])[8601]).text,
	"&LowerRightArrow;": (cast(dchar[])[8600]).text,
	"&Lscr;": (cast(dchar[])[8466]).text,
	"&Lsh;": (cast(dchar[])[8624]).text,
	"&Lstrok;": (cast(dchar[])[321]).text,
	"&Lt;": (cast(dchar[])[8810]).text,
	"&Map;": (cast(dchar[])[10501]).text,
	"&Mcy;": (cast(dchar[])[1052]).text,
	"&MediumSpace;": (cast(dchar[])[8287]).text,
	"&Mellintrf;": (cast(dchar[])[8499]).text,
	"&Mfr;": (cast(dchar[])[120080]).text,
	"&MinusPlus;": (cast(dchar[])[8723]).text,
	"&Mopf;": (cast(dchar[])[120132]).text,
	"&Mscr;": (cast(dchar[])[8499]).text,
	"&Mu;": (cast(dchar[])[924]).text,
	"&NJcy;": (cast(dchar[])[1034]).text,
	"&Nacute;": (cast(dchar[])[323]).text,
	"&Ncaron;": (cast(dchar[])[327]).text,
	"&Ncedil;": (cast(dchar[])[325]).text,
	"&Ncy;": (cast(dchar[])[1053]).text,
	"&NegativeMediumSpace;": (cast(dchar[])[8203]).text,
	"&NegativeThickSpace;": (cast(dchar[])[8203]).text,
	"&NegativeThinSpace;": (cast(dchar[])[8203]).text,
	"&NegativeVeryThinSpace;": (cast(dchar[])[8203]).text,
	"&NestedGreaterGreater;": (cast(dchar[])[8811]).text,
	"&NestedLessLess;": (cast(dchar[])[8810]).text,
	"&NewLine;": (cast(dchar[])[10]).text,
	"&Nfr;": (cast(dchar[])[120081]).text,
	"&NoBreak;": (cast(dchar[])[8288]).text,
	"&NonBreakingSpace;": (cast(dchar[])[160]).text,
	"&Nopf;": (cast(dchar[])[8469]).text,
	"&Not;": (cast(dchar[])[10988]).text,
	"&NotCongruent;": (cast(dchar[])[8802]).text,
	"&NotCupCap;": (cast(dchar[])[8813]).text,
	"&NotDoubleVerticalBar;": (cast(dchar[])[8742]).text,
	"&NotElement;": (cast(dchar[])[8713]).text,
	"&NotEqual;": (cast(dchar[])[8800]).text,
	"&NotEqualTilde;": (cast(dchar[])[8770, 824]).text,
	"&NotExists;": (cast(dchar[])[8708]).text,
	"&NotGreater;": (cast(dchar[])[8815]).text,
	"&NotGreaterEqual;": (cast(dchar[])[8817]).text,
	"&NotGreaterFullEqual;": (cast(dchar[])[8807, 824]).text,
	"&NotGreaterGreater;": (cast(dchar[])[8811, 824]).text,
	"&NotGreaterLess;": (cast(dchar[])[8825]).text,
	"&NotGreaterSlantEqual;": (cast(dchar[])[10878, 824]).text,
	"&NotGreaterTilde;": (cast(dchar[])[8821]).text,
	"&NotHumpDownHump;": (cast(dchar[])[8782, 824]).text,
	"&NotHumpEqual;": (cast(dchar[])[8783, 824]).text,
	"&NotLeftTriangle;": (cast(dchar[])[8938]).text,
	"&NotLeftTriangleBar;": (cast(dchar[])[10703, 824]).text,
	"&NotLeftTriangleEqual;": (cast(dchar[])[8940]).text,
	"&NotLess;": (cast(dchar[])[8814]).text,
	"&NotLessEqual;": (cast(dchar[])[8816]).text,
	"&NotLessGreater;": (cast(dchar[])[8824]).text,
	"&NotLessLess;": (cast(dchar[])[8810, 824]).text,
	"&NotLessSlantEqual;": (cast(dchar[])[10877, 824]).text,
	"&NotLessTilde;": (cast(dchar[])[8820]).text,
	"&NotNestedGreaterGreater;": (cast(dchar[])[10914, 824]).text,
	"&NotNestedLessLess;": (cast(dchar[])[10913, 824]).text,
	"&NotPrecedes;": (cast(dchar[])[8832]).text,
	"&NotPrecedesEqual;": (cast(dchar[])[10927, 824]).text,
	"&NotPrecedesSlantEqual;": (cast(dchar[])[8928]).text,
	"&NotReverseElement;": (cast(dchar[])[8716]).text,
	"&NotRightTriangle;": (cast(dchar[])[8939]).text,
	"&NotRightTriangleBar;": (cast(dchar[])[10704, 824]).text,
	"&NotRightTriangleEqual;": (cast(dchar[])[8941]).text,
	"&NotSquareSubset;": (cast(dchar[])[8847, 824]).text,
	"&NotSquareSubsetEqual;": (cast(dchar[])[8930]).text,
	"&NotSquareSuperset;": (cast(dchar[])[8848, 824]).text,
	"&NotSquareSupersetEqual;": (cast(dchar[])[8931]).text,
	"&NotSubset;": (cast(dchar[])[8834, 8402]).text,
	"&NotSubsetEqual;": (cast(dchar[])[8840]).text,
	"&NotSucceeds;": (cast(dchar[])[8833]).text,
	"&NotSucceedsEqual;": (cast(dchar[])[10928, 824]).text,
	"&NotSucceedsSlantEqual;": (cast(dchar[])[8929]).text,
	"&NotSucceedsTilde;": (cast(dchar[])[8831, 824]).text,
	"&NotSuperset;": (cast(dchar[])[8835, 8402]).text,
	"&NotSupersetEqual;": (cast(dchar[])[8841]).text,
	"&NotTilde;": (cast(dchar[])[8769]).text,
	"&NotTildeEqual;": (cast(dchar[])[8772]).text,
	"&NotTildeFullEqual;": (cast(dchar[])[8775]).text,
	"&NotTildeTilde;": (cast(dchar[])[8777]).text,
	"&NotVerticalBar;": (cast(dchar[])[8740]).text,
	"&Nscr;": (cast(dchar[])[119977]).text,
	"&Ntilde": (cast(dchar[])[209]).text,
	"&Ntilde;": (cast(dchar[])[209]).text,
	"&Nu;": (cast(dchar[])[925]).text,
	"&OElig;": (cast(dchar[])[338]).text,
	"&Oacute": (cast(dchar[])[211]).text,
	"&Oacute;": (cast(dchar[])[211]).text,
	"&Ocirc": (cast(dchar[])[212]).text,
	"&Ocirc;": (cast(dchar[])[212]).text,
	"&Ocy;": (cast(dchar[])[1054]).text,
	"&Odblac;": (cast(dchar[])[336]).text,
	"&Ofr;": (cast(dchar[])[120082]).text,
	"&Ograve": (cast(dchar[])[210]).text,
	"&Ograve;": (cast(dchar[])[210]).text,
	"&Omacr;": (cast(dchar[])[332]).text,
	"&Omega;": (cast(dchar[])[937]).text,
	"&Omicron;": (cast(dchar[])[927]).text,
	"&Oopf;": (cast(dchar[])[120134]).text,
	"&OpenCurlyDoubleQuote;": (cast(dchar[])[8220]).text,
	"&OpenCurlyQuote;": (cast(dchar[])[8216]).text,
	"&Or;": (cast(dchar[])[10836]).text,
	"&Oscr;": (cast(dchar[])[119978]).text,
	"&Oslash": (cast(dchar[])[216]).text,
	"&Oslash;": (cast(dchar[])[216]).text,
	"&Otilde": (cast(dchar[])[213]).text,
	"&Otilde;": (cast(dchar[])[213]).text,
	"&Otimes;": (cast(dchar[])[10807]).text,
	"&Ouml": (cast(dchar[])[214]).text,
	"&Ouml;": (cast(dchar[])[214]).text,
	"&OverBar;": (cast(dchar[])[8254]).text,
	"&OverBrace;": (cast(dchar[])[9182]).text,
	"&OverBracket;": (cast(dchar[])[9140]).text,
	"&OverParenthesis;": (cast(dchar[])[9180]).text,
	"&PartialD;": (cast(dchar[])[8706]).text,
	"&Pcy;": (cast(dchar[])[1055]).text,
	"&Pfr;": (cast(dchar[])[120083]).text,
	"&Phi;": (cast(dchar[])[934]).text,
	"&Pi;": (cast(dchar[])[928]).text,
	"&PlusMinus;": (cast(dchar[])[177]).text,
	"&Poincareplane;": (cast(dchar[])[8460]).text,
	"&Popf;": (cast(dchar[])[8473]).text,
	"&Pr;": (cast(dchar[])[10939]).text,
	"&Precedes;": (cast(dchar[])[8826]).text,
	"&PrecedesEqual;": (cast(dchar[])[10927]).text,
	"&PrecedesSlantEqual;": (cast(dchar[])[8828]).text,
	"&PrecedesTilde;": (cast(dchar[])[8830]).text,
	"&Prime;": (cast(dchar[])[8243]).text,
	"&Product;": (cast(dchar[])[8719]).text,
	"&Proportion;": (cast(dchar[])[8759]).text,
	"&Proportional;": (cast(dchar[])[8733]).text,
	"&Pscr;": (cast(dchar[])[119979]).text,
	"&Psi;": (cast(dchar[])[936]).text,
	"&QUOT": (cast(dchar[])[34]).text,
	"&QUOT;": (cast(dchar[])[34]).text,
	"&Qfr;": (cast(dchar[])[120084]).text,
	"&Qopf;": (cast(dchar[])[8474]).text,
	"&Qscr;": (cast(dchar[])[119980]).text,
	"&RBarr;": (cast(dchar[])[10512]).text,
	"&REG": (cast(dchar[])[174]).text,
	"&REG;": (cast(dchar[])[174]).text,
	"&Racute;": (cast(dchar[])[340]).text,
	"&Rang;": (cast(dchar[])[10219]).text,
	"&Rarr;": (cast(dchar[])[8608]).text,
	"&Rarrtl;": (cast(dchar[])[10518]).text,
	"&Rcaron;": (cast(dchar[])[344]).text,
	"&Rcedil;": (cast(dchar[])[342]).text,
	"&Rcy;": (cast(dchar[])[1056]).text,
	"&Re;": (cast(dchar[])[8476]).text,
	"&ReverseElement;": (cast(dchar[])[8715]).text,
	"&ReverseEquilibrium;": (cast(dchar[])[8651]).text,
	"&ReverseUpEquilibrium;": (cast(dchar[])[10607]).text,
	"&Rfr;": (cast(dchar[])[8476]).text,
	"&Rho;": (cast(dchar[])[929]).text,
	"&RightAngleBracket;": (cast(dchar[])[10217]).text,
	"&RightArrow;": (cast(dchar[])[8594]).text,
	"&RightArrowBar;": (cast(dchar[])[8677]).text,
	"&RightArrowLeftArrow;": (cast(dchar[])[8644]).text,
	"&RightCeiling;": (cast(dchar[])[8969]).text,
	"&RightDoubleBracket;": (cast(dchar[])[10215]).text,
	"&RightDownTeeVector;": (cast(dchar[])[10589]).text,
	"&RightDownVector;": (cast(dchar[])[8642]).text,
	"&RightDownVectorBar;": (cast(dchar[])[10581]).text,
	"&RightFloor;": (cast(dchar[])[8971]).text,
	"&RightTee;": (cast(dchar[])[8866]).text,
	"&RightTeeArrow;": (cast(dchar[])[8614]).text,
	"&RightTeeVector;": (cast(dchar[])[10587]).text,
	"&RightTriangle;": (cast(dchar[])[8883]).text,
	"&RightTriangleBar;": (cast(dchar[])[10704]).text,
	"&RightTriangleEqual;": (cast(dchar[])[8885]).text,
	"&RightUpDownVector;": (cast(dchar[])[10575]).text,
	"&RightUpTeeVector;": (cast(dchar[])[10588]).text,
	"&RightUpVector;": (cast(dchar[])[8638]).text,
	"&RightUpVectorBar;": (cast(dchar[])[10580]).text,
	"&RightVector;": (cast(dchar[])[8640]).text,
	"&RightVectorBar;": (cast(dchar[])[10579]).text,
	"&Rightarrow;": (cast(dchar[])[8658]).text,
	"&Ropf;": (cast(dchar[])[8477]).text,
	"&RoundImplies;": (cast(dchar[])[10608]).text,
	"&Rrightarrow;": (cast(dchar[])[8667]).text,
	"&Rscr;": (cast(dchar[])[8475]).text,
	"&Rsh;": (cast(dchar[])[8625]).text,
	"&RuleDelayed;": (cast(dchar[])[10740]).text,
	"&SHCHcy;": (cast(dchar[])[1065]).text,
	"&SHcy;": (cast(dchar[])[1064]).text,
	"&SOFTcy;": (cast(dchar[])[1068]).text,
	"&Sacute;": (cast(dchar[])[346]).text,
	"&Sc;": (cast(dchar[])[10940]).text,
	"&Scaron;": (cast(dchar[])[352]).text,
	"&Scedil;": (cast(dchar[])[350]).text,
	"&Scirc;": (cast(dchar[])[348]).text,
	"&Scy;": (cast(dchar[])[1057]).text,
	"&Sfr;": (cast(dchar[])[120086]).text,
	"&ShortDownArrow;": (cast(dchar[])[8595]).text,
	"&ShortLeftArrow;": (cast(dchar[])[8592]).text,
	"&ShortRightArrow;": (cast(dchar[])[8594]).text,
	"&ShortUpArrow;": (cast(dchar[])[8593]).text,
	"&Sigma;": (cast(dchar[])[931]).text,
	"&SmallCircle;": (cast(dchar[])[8728]).text,
	"&Sopf;": (cast(dchar[])[120138]).text,
	"&Sqrt;": (cast(dchar[])[8730]).text,
	"&Square;": (cast(dchar[])[9633]).text,
	"&SquareIntersection;": (cast(dchar[])[8851]).text,
	"&SquareSubset;": (cast(dchar[])[8847]).text,
	"&SquareSubsetEqual;": (cast(dchar[])[8849]).text,
	"&SquareSuperset;": (cast(dchar[])[8848]).text,
	"&SquareSupersetEqual;": (cast(dchar[])[8850]).text,
	"&SquareUnion;": (cast(dchar[])[8852]).text,
	"&Sscr;": (cast(dchar[])[119982]).text,
	"&Star;": (cast(dchar[])[8902]).text,
	"&Sub;": (cast(dchar[])[8912]).text,
	"&Subset;": (cast(dchar[])[8912]).text,
	"&SubsetEqual;": (cast(dchar[])[8838]).text,
	"&Succeeds;": (cast(dchar[])[8827]).text,
	"&SucceedsEqual;": (cast(dchar[])[10928]).text,
	"&SucceedsSlantEqual;": (cast(dchar[])[8829]).text,
	"&SucceedsTilde;": (cast(dchar[])[8831]).text,
	"&SuchThat;": (cast(dchar[])[8715]).text,
	"&Sum;": (cast(dchar[])[8721]).text,
	"&Sup;": (cast(dchar[])[8913]).text,
	"&Superset;": (cast(dchar[])[8835]).text,
	"&SupersetEqual;": (cast(dchar[])[8839]).text,
	"&Supset;": (cast(dchar[])[8913]).text,
	"&THORN": (cast(dchar[])[222]).text,
	"&THORN;": (cast(dchar[])[222]).text,
	"&TRADE;": (cast(dchar[])[8482]).text,
	"&TSHcy;": (cast(dchar[])[1035]).text,
	"&TScy;": (cast(dchar[])[1062]).text,
	"&Tab;": (cast(dchar[])[9]).text,
	"&Tau;": (cast(dchar[])[932]).text,
	"&Tcaron;": (cast(dchar[])[356]).text,
	"&Tcedil;": (cast(dchar[])[354]).text,
	"&Tcy;": (cast(dchar[])[1058]).text,
	"&Tfr;": (cast(dchar[])[120087]).text,
	"&Therefore;": (cast(dchar[])[8756]).text,
	"&Theta;": (cast(dchar[])[920]).text,
	"&ThickSpace;": (cast(dchar[])[8287, 8202]).text,
	"&ThinSpace;": (cast(dchar[])[8201]).text,
	"&Tilde;": (cast(dchar[])[8764]).text,
	"&TildeEqual;": (cast(dchar[])[8771]).text,
	"&TildeFullEqual;": (cast(dchar[])[8773]).text,
	"&TildeTilde;": (cast(dchar[])[8776]).text,
	"&Topf;": (cast(dchar[])[120139]).text,
	"&TripleDot;": (cast(dchar[])[8411]).text,
	"&Tscr;": (cast(dchar[])[119983]).text,
	"&Tstrok;": (cast(dchar[])[358]).text,
	"&Uacute": (cast(dchar[])[218]).text,
	"&Uacute;": (cast(dchar[])[218]).text,
	"&Uarr;": (cast(dchar[])[8607]).text,
	"&Uarrocir;": (cast(dchar[])[10569]).text,
	"&Ubrcy;": (cast(dchar[])[1038]).text,
	"&Ubreve;": (cast(dchar[])[364]).text,
	"&Ucirc": (cast(dchar[])[219]).text,
	"&Ucirc;": (cast(dchar[])[219]).text,
	"&Ucy;": (cast(dchar[])[1059]).text,
	"&Udblac;": (cast(dchar[])[368]).text,
	"&Ufr;": (cast(dchar[])[120088]).text,
	"&Ugrave": (cast(dchar[])[217]).text,
	"&Ugrave;": (cast(dchar[])[217]).text,
	"&Umacr;": (cast(dchar[])[362]).text,
	"&UnderBar;": (cast(dchar[])[95]).text,
	"&UnderBrace;": (cast(dchar[])[9183]).text,
	"&UnderBracket;": (cast(dchar[])[9141]).text,
	"&UnderParenthesis;": (cast(dchar[])[9181]).text,
	"&Union;": (cast(dchar[])[8899]).text,
	"&UnionPlus;": (cast(dchar[])[8846]).text,
	"&Uogon;": (cast(dchar[])[370]).text,
	"&Uopf;": (cast(dchar[])[120140]).text,
	"&UpArrow;": (cast(dchar[])[8593]).text,
	"&UpArrowBar;": (cast(dchar[])[10514]).text,
	"&UpArrowDownArrow;": (cast(dchar[])[8645]).text,
	"&UpDownArrow;": (cast(dchar[])[8597]).text,
	"&UpEquilibrium;": (cast(dchar[])[10606]).text,
	"&UpTee;": (cast(dchar[])[8869]).text,
	"&UpTeeArrow;": (cast(dchar[])[8613]).text,
	"&Uparrow;": (cast(dchar[])[8657]).text,
	"&Updownarrow;": (cast(dchar[])[8661]).text,
	"&UpperLeftArrow;": (cast(dchar[])[8598]).text,
	"&UpperRightArrow;": (cast(dchar[])[8599]).text,
	"&Upsi;": (cast(dchar[])[978]).text,
	"&Upsilon;": (cast(dchar[])[933]).text,
	"&Uring;": (cast(dchar[])[366]).text,
	"&Uscr;": (cast(dchar[])[119984]).text,
	"&Utilde;": (cast(dchar[])[360]).text,
	"&Uuml": (cast(dchar[])[220]).text,
	"&Uuml;": (cast(dchar[])[220]).text,
	"&VDash;": (cast(dchar[])[8875]).text,
	"&Vbar;": (cast(dchar[])[10987]).text,
	"&Vcy;": (cast(dchar[])[1042]).text,
	"&Vdash;": (cast(dchar[])[8873]).text,
	"&Vdashl;": (cast(dchar[])[10982]).text,
	"&Vee;": (cast(dchar[])[8897]).text,
	"&Verbar;": (cast(dchar[])[8214]).text,
	"&Vert;": (cast(dchar[])[8214]).text,
	"&VerticalBar;": (cast(dchar[])[8739]).text,
	"&VerticalLine;": (cast(dchar[])[124]).text,
	"&VerticalSeparator;": (cast(dchar[])[10072]).text,
	"&VerticalTilde;": (cast(dchar[])[8768]).text,
	"&VeryThinSpace;": (cast(dchar[])[8202]).text,
	"&Vfr;": (cast(dchar[])[120089]).text,
	"&Vopf;": (cast(dchar[])[120141]).text,
	"&Vscr;": (cast(dchar[])[119985]).text,
	"&Vvdash;": (cast(dchar[])[8874]).text,
	"&Wcirc;": (cast(dchar[])[372]).text,
	"&Wedge;": (cast(dchar[])[8896]).text,
	"&Wfr;": (cast(dchar[])[120090]).text,
	"&Wopf;": (cast(dchar[])[120142]).text,
	"&Wscr;": (cast(dchar[])[119986]).text,
	"&Xfr;": (cast(dchar[])[120091]).text,
	"&Xi;": (cast(dchar[])[926]).text,
	"&Xopf;": (cast(dchar[])[120143]).text,
	"&Xscr;": (cast(dchar[])[119987]).text,
	"&YAcy;": (cast(dchar[])[1071]).text,
	"&YIcy;": (cast(dchar[])[1031]).text,
	"&YUcy;": (cast(dchar[])[1070]).text,
	"&Yacute": (cast(dchar[])[221]).text,
	"&Yacute;": (cast(dchar[])[221]).text,
	"&Ycirc;": (cast(dchar[])[374]).text,
	"&Ycy;": (cast(dchar[])[1067]).text,
	"&Yfr;": (cast(dchar[])[120092]).text,
	"&Yopf;": (cast(dchar[])[120144]).text,
	"&Yscr;": (cast(dchar[])[119988]).text,
	"&Yuml;": (cast(dchar[])[376]).text,
	"&ZHcy;": (cast(dchar[])[1046]).text,
	"&Zacute;": (cast(dchar[])[377]).text,
	"&Zcaron;": (cast(dchar[])[381]).text,
	"&Zcy;": (cast(dchar[])[1047]).text,
	"&Zdot;": (cast(dchar[])[379]).text,
	"&ZeroWidthSpace;": (cast(dchar[])[8203]).text,
	"&Zeta;": (cast(dchar[])[918]).text,
	"&Zfr;": (cast(dchar[])[8488]).text,
	"&Zopf;": (cast(dchar[])[8484]).text,
	"&Zscr;": (cast(dchar[])[119989]).text,
	"&aacute": (cast(dchar[])[225]).text,
	"&aacute;": (cast(dchar[])[225]).text,
	"&abreve;": (cast(dchar[])[259]).text,
	"&ac;": (cast(dchar[])[8766]).text,
	"&acE;": (cast(dchar[])[8766, 819]).text,
	"&acd;": (cast(dchar[])[8767]).text,
	"&acirc": (cast(dchar[])[226]).text,
	"&acirc;": (cast(dchar[])[226]).text,
	"&acute": (cast(dchar[])[180]).text,
	"&acute;": (cast(dchar[])[180]).text,
	"&acy;": (cast(dchar[])[1072]).text,
	"&aelig": (cast(dchar[])[230]).text,
	"&aelig;": (cast(dchar[])[230]).text,
	"&af;": (cast(dchar[])[8289]).text,
	"&afr;": (cast(dchar[])[120094]).text,
	"&agrave": (cast(dchar[])[224]).text,
	"&agrave;": (cast(dchar[])[224]).text,
	"&alefsym;": (cast(dchar[])[8501]).text,
	"&aleph;": (cast(dchar[])[8501]).text,
	"&alpha;": (cast(dchar[])[945]).text,
	"&amacr;": (cast(dchar[])[257]).text,
	"&amalg;": (cast(dchar[])[10815]).text,
	"&amp": (cast(dchar[])[38]).text,
	"&amp;": (cast(dchar[])[38]).text,
	"&and;": (cast(dchar[])[8743]).text,
	"&andand;": (cast(dchar[])[10837]).text,
	"&andd;": (cast(dchar[])[10844]).text,
	"&andslope;": (cast(dchar[])[10840]).text,
	"&andv;": (cast(dchar[])[10842]).text,
	"&ang;": (cast(dchar[])[8736]).text,
	"&ange;": (cast(dchar[])[10660]).text,
	"&angle;": (cast(dchar[])[8736]).text,
	"&angmsd;": (cast(dchar[])[8737]).text,
	"&angmsdaa;": (cast(dchar[])[10664]).text,
	"&angmsdab;": (cast(dchar[])[10665]).text,
	"&angmsdac;": (cast(dchar[])[10666]).text,
	"&angmsdad;": (cast(dchar[])[10667]).text,
	"&angmsdae;": (cast(dchar[])[10668]).text,
	"&angmsdaf;": (cast(dchar[])[10669]).text,
	"&angmsdag;": (cast(dchar[])[10670]).text,
	"&angmsdah;": (cast(dchar[])[10671]).text,
	"&angrt;": (cast(dchar[])[8735]).text,
	"&angrtvb;": (cast(dchar[])[8894]).text,
	"&angrtvbd;": (cast(dchar[])[10653]).text,
	"&angsph;": (cast(dchar[])[8738]).text,
	"&angst;": (cast(dchar[])[197]).text,
	"&angzarr;": (cast(dchar[])[9084]).text,
	"&aogon;": (cast(dchar[])[261]).text,
	"&aopf;": (cast(dchar[])[120146]).text,
	"&ap;": (cast(dchar[])[8776]).text,
	"&apE;": (cast(dchar[])[10864]).text,
	"&apacir;": (cast(dchar[])[10863]).text,
	"&ape;": (cast(dchar[])[8778]).text,
	"&apid;": (cast(dchar[])[8779]).text,
	"&apos;": (cast(dchar[])[39]).text,
	"&approx;": (cast(dchar[])[8776]).text,
	"&approxeq;": (cast(dchar[])[8778]).text,
	"&aring": (cast(dchar[])[229]).text,
	"&aring;": (cast(dchar[])[229]).text,
	"&ascr;": (cast(dchar[])[119990]).text,
	"&ast;": (cast(dchar[])[42]).text,
	"&asymp;": (cast(dchar[])[8776]).text,
	"&asympeq;": (cast(dchar[])[8781]).text,
	"&atilde": (cast(dchar[])[227]).text,
	"&atilde;": (cast(dchar[])[227]).text,
	"&auml": (cast(dchar[])[228]).text,
	"&auml;": (cast(dchar[])[228]).text,
	"&awconint;": (cast(dchar[])[8755]).text,
	"&awint;": (cast(dchar[])[10769]).text,
	"&bNot;": (cast(dchar[])[10989]).text,
	"&backcong;": (cast(dchar[])[8780]).text,
	"&backepsilon;": (cast(dchar[])[1014]).text,
	"&backprime;": (cast(dchar[])[8245]).text,
	"&backsim;": (cast(dchar[])[8765]).text,
	"&backsimeq;": (cast(dchar[])[8909]).text,
	"&barvee;": (cast(dchar[])[8893]).text,
	"&barwed;": (cast(dchar[])[8965]).text,
	"&barwedge;": (cast(dchar[])[8965]).text,
	"&bbrk;": (cast(dchar[])[9141]).text,
	"&bbrktbrk;": (cast(dchar[])[9142]).text,
	"&bcong;": (cast(dchar[])[8780]).text,
	"&bcy;": (cast(dchar[])[1073]).text,
	"&bdquo;": (cast(dchar[])[8222]).text,
	"&becaus;": (cast(dchar[])[8757]).text,
	"&because;": (cast(dchar[])[8757]).text,
	"&bemptyv;": (cast(dchar[])[10672]).text,
	"&bepsi;": (cast(dchar[])[1014]).text,
	"&bernou;": (cast(dchar[])[8492]).text,
	"&beta;": (cast(dchar[])[946]).text,
	"&beth;": (cast(dchar[])[8502]).text,
	"&between;": (cast(dchar[])[8812]).text,
	"&bfr;": (cast(dchar[])[120095]).text,
	"&bigcap;": (cast(dchar[])[8898]).text,
	"&bigcirc;": (cast(dchar[])[9711]).text,
	"&bigcup;": (cast(dchar[])[8899]).text,
	"&bigodot;": (cast(dchar[])[10752]).text,
	"&bigoplus;": (cast(dchar[])[10753]).text,
	"&bigotimes;": (cast(dchar[])[10754]).text,
	"&bigsqcup;": (cast(dchar[])[10758]).text,
	"&bigstar;": (cast(dchar[])[9733]).text,
	"&bigtriangledown;": (cast(dchar[])[9661]).text,
	"&bigtriangleup;": (cast(dchar[])[9651]).text,
	"&biguplus;": (cast(dchar[])[10756]).text,
	"&bigvee;": (cast(dchar[])[8897]).text,
	"&bigwedge;": (cast(dchar[])[8896]).text,
	"&bkarow;": (cast(dchar[])[10509]).text,
	"&blacklozenge;": (cast(dchar[])[10731]).text,
	"&blacksquare;": (cast(dchar[])[9642]).text,
	"&blacktriangle;": (cast(dchar[])[9652]).text,
	"&blacktriangledown;": (cast(dchar[])[9662]).text,
	"&blacktriangleleft;": (cast(dchar[])[9666]).text,
	"&blacktriangleright;": (cast(dchar[])[9656]).text,
	"&blank;": (cast(dchar[])[9251]).text,
	"&blk12;": (cast(dchar[])[9618]).text,
	"&blk14;": (cast(dchar[])[9617]).text,
	"&blk34;": (cast(dchar[])[9619]).text,
	"&block;": (cast(dchar[])[9608]).text,
	"&bne;": (cast(dchar[])[61, 8421]).text,
	"&bnequiv;": (cast(dchar[])[8801, 8421]).text,
	"&bnot;": (cast(dchar[])[8976]).text,
	"&bopf;": (cast(dchar[])[120147]).text,
	"&bot;": (cast(dchar[])[8869]).text,
	"&bottom;": (cast(dchar[])[8869]).text,
	"&bowtie;": (cast(dchar[])[8904]).text,
	"&boxDL;": (cast(dchar[])[9559]).text,
	"&boxDR;": (cast(dchar[])[9556]).text,
	"&boxDl;": (cast(dchar[])[9558]).text,
	"&boxDr;": (cast(dchar[])[9555]).text,
	"&boxH;": (cast(dchar[])[9552]).text,
	"&boxHD;": (cast(dchar[])[9574]).text,
	"&boxHU;": (cast(dchar[])[9577]).text,
	"&boxHd;": (cast(dchar[])[9572]).text,
	"&boxHu;": (cast(dchar[])[9575]).text,
	"&boxUL;": (cast(dchar[])[9565]).text,
	"&boxUR;": (cast(dchar[])[9562]).text,
	"&boxUl;": (cast(dchar[])[9564]).text,
	"&boxUr;": (cast(dchar[])[9561]).text,
	"&boxV;": (cast(dchar[])[9553]).text,
	"&boxVH;": (cast(dchar[])[9580]).text,
	"&boxVL;": (cast(dchar[])[9571]).text,
	"&boxVR;": (cast(dchar[])[9568]).text,
	"&boxVh;": (cast(dchar[])[9579]).text,
	"&boxVl;": (cast(dchar[])[9570]).text,
	"&boxVr;": (cast(dchar[])[9567]).text,
	"&boxbox;": (cast(dchar[])[10697]).text,
	"&boxdL;": (cast(dchar[])[9557]).text,
	"&boxdR;": (cast(dchar[])[9554]).text,
	"&boxdl;": (cast(dchar[])[9488]).text,
	"&boxdr;": (cast(dchar[])[9484]).text,
	"&boxh;": (cast(dchar[])[9472]).text,
	"&boxhD;": (cast(dchar[])[9573]).text,
	"&boxhU;": (cast(dchar[])[9576]).text,
	"&boxhd;": (cast(dchar[])[9516]).text,
	"&boxhu;": (cast(dchar[])[9524]).text,
	"&boxminus;": (cast(dchar[])[8863]).text,
	"&boxplus;": (cast(dchar[])[8862]).text,
	"&boxtimes;": (cast(dchar[])[8864]).text,
	"&boxuL;": (cast(dchar[])[9563]).text,
	"&boxuR;": (cast(dchar[])[9560]).text,
	"&boxul;": (cast(dchar[])[9496]).text,
	"&boxur;": (cast(dchar[])[9492]).text,
	"&boxv;": (cast(dchar[])[9474]).text,
	"&boxvH;": (cast(dchar[])[9578]).text,
	"&boxvL;": (cast(dchar[])[9569]).text,
	"&boxvR;": (cast(dchar[])[9566]).text,
	"&boxvh;": (cast(dchar[])[9532]).text,
	"&boxvl;": (cast(dchar[])[9508]).text,
	"&boxvr;": (cast(dchar[])[9500]).text,
	"&bprime;": (cast(dchar[])[8245]).text,
	"&breve;": (cast(dchar[])[728]).text,
	"&brvbar": (cast(dchar[])[166]).text,
	"&brvbar;": (cast(dchar[])[166]).text,
	"&bscr;": (cast(dchar[])[119991]).text,
	"&bsemi;": (cast(dchar[])[8271]).text,
	"&bsim;": (cast(dchar[])[8765]).text,
	"&bsime;": (cast(dchar[])[8909]).text,
	"&bsol;": (cast(dchar[])[92]).text,
	"&bsolb;": (cast(dchar[])[10693]).text,
	"&bsolhsub;": (cast(dchar[])[10184]).text,
	"&bull;": (cast(dchar[])[8226]).text,
	"&bullet;": (cast(dchar[])[8226]).text,
	"&bump;": (cast(dchar[])[8782]).text,
	"&bumpE;": (cast(dchar[])[10926]).text,
	"&bumpe;": (cast(dchar[])[8783]).text,
	"&bumpeq;": (cast(dchar[])[8783]).text,
	"&cacute;": (cast(dchar[])[263]).text,
	"&cap;": (cast(dchar[])[8745]).text,
	"&capand;": (cast(dchar[])[10820]).text,
	"&capbrcup;": (cast(dchar[])[10825]).text,
	"&capcap;": (cast(dchar[])[10827]).text,
	"&capcup;": (cast(dchar[])[10823]).text,
	"&capdot;": (cast(dchar[])[10816]).text,
	"&caps;": (cast(dchar[])[8745, 65024]).text,
	"&caret;": (cast(dchar[])[8257]).text,
	"&caron;": (cast(dchar[])[711]).text,
	"&ccaps;": (cast(dchar[])[10829]).text,
	"&ccaron;": (cast(dchar[])[269]).text,
	"&ccedil": (cast(dchar[])[231]).text,
	"&ccedil;": (cast(dchar[])[231]).text,
	"&ccirc;": (cast(dchar[])[265]).text,
	"&ccups;": (cast(dchar[])[10828]).text,
	"&ccupssm;": (cast(dchar[])[10832]).text,
	"&cdot;": (cast(dchar[])[267]).text,
	"&cedil": (cast(dchar[])[184]).text,
	"&cedil;": (cast(dchar[])[184]).text,
	"&cemptyv;": (cast(dchar[])[10674]).text,
	"&cent": (cast(dchar[])[162]).text,
	"&cent;": (cast(dchar[])[162]).text,
	"&centerdot;": (cast(dchar[])[183]).text,
	"&cfr;": (cast(dchar[])[120096]).text,
	"&chcy;": (cast(dchar[])[1095]).text,
	"&check;": (cast(dchar[])[10003]).text,
	"&checkmark;": (cast(dchar[])[10003]).text,
	"&chi;": (cast(dchar[])[967]).text,
	"&cir;": (cast(dchar[])[9675]).text,
	"&cirE;": (cast(dchar[])[10691]).text,
	"&circ;": (cast(dchar[])[710]).text,
	"&circeq;": (cast(dchar[])[8791]).text,
	"&circlearrowleft;": (cast(dchar[])[8634]).text,
	"&circlearrowright;": (cast(dchar[])[8635]).text,
	"&circledR;": (cast(dchar[])[174]).text,
	"&circledS;": (cast(dchar[])[9416]).text,
	"&circledast;": (cast(dchar[])[8859]).text,
	"&circledcirc;": (cast(dchar[])[8858]).text,
	"&circleddash;": (cast(dchar[])[8861]).text,
	"&cire;": (cast(dchar[])[8791]).text,
	"&cirfnint;": (cast(dchar[])[10768]).text,
	"&cirmid;": (cast(dchar[])[10991]).text,
	"&cirscir;": (cast(dchar[])[10690]).text,
	"&clubs;": (cast(dchar[])[9827]).text,
	"&clubsuit;": (cast(dchar[])[9827]).text,
	"&colon;": (cast(dchar[])[58]).text,
	"&colone;": (cast(dchar[])[8788]).text,
	"&coloneq;": (cast(dchar[])[8788]).text,
	"&comma;": (cast(dchar[])[44]).text,
	"&commat;": (cast(dchar[])[64]).text,
	"&comp;": (cast(dchar[])[8705]).text,
	"&compfn;": (cast(dchar[])[8728]).text,
	"&complement;": (cast(dchar[])[8705]).text,
	"&complexes;": (cast(dchar[])[8450]).text,
	"&cong;": (cast(dchar[])[8773]).text,
	"&congdot;": (cast(dchar[])[10861]).text,
	"&conint;": (cast(dchar[])[8750]).text,
	"&copf;": (cast(dchar[])[120148]).text,
	"&coprod;": (cast(dchar[])[8720]).text,
	"&copy": (cast(dchar[])[169]).text,
	"&copy;": (cast(dchar[])[169]).text,
	"&copysr;": (cast(dchar[])[8471]).text,
	"&crarr;": (cast(dchar[])[8629]).text,
	"&cross;": (cast(dchar[])[10007]).text,
	"&cscr;": (cast(dchar[])[119992]).text,
	"&csub;": (cast(dchar[])[10959]).text,
	"&csube;": (cast(dchar[])[10961]).text,
	"&csup;": (cast(dchar[])[10960]).text,
	"&csupe;": (cast(dchar[])[10962]).text,
	"&ctdot;": (cast(dchar[])[8943]).text,
	"&cudarrl;": (cast(dchar[])[10552]).text,
	"&cudarrr;": (cast(dchar[])[10549]).text,
	"&cuepr;": (cast(dchar[])[8926]).text,
	"&cuesc;": (cast(dchar[])[8927]).text,
	"&cularr;": (cast(dchar[])[8630]).text,
	"&cularrp;": (cast(dchar[])[10557]).text,
	"&cup;": (cast(dchar[])[8746]).text,
	"&cupbrcap;": (cast(dchar[])[10824]).text,
	"&cupcap;": (cast(dchar[])[10822]).text,
	"&cupcup;": (cast(dchar[])[10826]).text,
	"&cupdot;": (cast(dchar[])[8845]).text,
	"&cupor;": (cast(dchar[])[10821]).text,
	"&cups;": (cast(dchar[])[8746, 65024]).text,
	"&curarr;": (cast(dchar[])[8631]).text,
	"&curarrm;": (cast(dchar[])[10556]).text,
	"&curlyeqprec;": (cast(dchar[])[8926]).text,
	"&curlyeqsucc;": (cast(dchar[])[8927]).text,
	"&curlyvee;": (cast(dchar[])[8910]).text,
	"&curlywedge;": (cast(dchar[])[8911]).text,
	"&curren": (cast(dchar[])[164]).text,
	"&curren;": (cast(dchar[])[164]).text,
	"&curvearrowleft;": (cast(dchar[])[8630]).text,
	"&curvearrowright;": (cast(dchar[])[8631]).text,
	"&cuvee;": (cast(dchar[])[8910]).text,
	"&cuwed;": (cast(dchar[])[8911]).text,
	"&cwconint;": (cast(dchar[])[8754]).text,
	"&cwint;": (cast(dchar[])[8753]).text,
	"&cylcty;": (cast(dchar[])[9005]).text,
	"&dArr;": (cast(dchar[])[8659]).text,
	"&dHar;": (cast(dchar[])[10597]).text,
	"&dagger;": (cast(dchar[])[8224]).text,
	"&daleth;": (cast(dchar[])[8504]).text,
	"&darr;": (cast(dchar[])[8595]).text,
	"&dash;": (cast(dchar[])[8208]).text,
	"&dashv;": (cast(dchar[])[8867]).text,
	"&dbkarow;": (cast(dchar[])[10511]).text,
	"&dblac;": (cast(dchar[])[733]).text,
	"&dcaron;": (cast(dchar[])[271]).text,
	"&dcy;": (cast(dchar[])[1076]).text,
	"&dd;": (cast(dchar[])[8518]).text,
	"&ddagger;": (cast(dchar[])[8225]).text,
	"&ddarr;": (cast(dchar[])[8650]).text,
	"&ddotseq;": (cast(dchar[])[10871]).text,
	"&deg": (cast(dchar[])[176]).text,
	"&deg;": (cast(dchar[])[176]).text,
	"&delta;": (cast(dchar[])[948]).text,
	"&demptyv;": (cast(dchar[])[10673]).text,
	"&dfisht;": (cast(dchar[])[10623]).text,
	"&dfr;": (cast(dchar[])[120097]).text,
	"&dharl;": (cast(dchar[])[8643]).text,
	"&dharr;": (cast(dchar[])[8642]).text,
	"&diam;": (cast(dchar[])[8900]).text,
	"&diamond;": (cast(dchar[])[8900]).text,
	"&diamondsuit;": (cast(dchar[])[9830]).text,
	"&diams;": (cast(dchar[])[9830]).text,
	"&die;": (cast(dchar[])[168]).text,
	"&digamma;": (cast(dchar[])[989]).text,
	"&disin;": (cast(dchar[])[8946]).text,
	"&div;": (cast(dchar[])[247]).text,
	"&divide": (cast(dchar[])[247]).text,
	"&divide;": (cast(dchar[])[247]).text,
	"&divideontimes;": (cast(dchar[])[8903]).text,
	"&divonx;": (cast(dchar[])[8903]).text,
	"&djcy;": (cast(dchar[])[1106]).text,
	"&dlcorn;": (cast(dchar[])[8990]).text,
	"&dlcrop;": (cast(dchar[])[8973]).text,
	"&dollar;": (cast(dchar[])[36]).text,
	"&dopf;": (cast(dchar[])[120149]).text,
	"&dot;": (cast(dchar[])[729]).text,
	"&doteq;": (cast(dchar[])[8784]).text,
	"&doteqdot;": (cast(dchar[])[8785]).text,
	"&dotminus;": (cast(dchar[])[8760]).text,
	"&dotplus;": (cast(dchar[])[8724]).text,
	"&dotsquare;": (cast(dchar[])[8865]).text,
	"&doublebarwedge;": (cast(dchar[])[8966]).text,
	"&downarrow;": (cast(dchar[])[8595]).text,
	"&downdownarrows;": (cast(dchar[])[8650]).text,
	"&downharpoonleft;": (cast(dchar[])[8643]).text,
	"&downharpoonright;": (cast(dchar[])[8642]).text,
	"&drbkarow;": (cast(dchar[])[10512]).text,
	"&drcorn;": (cast(dchar[])[8991]).text,
	"&drcrop;": (cast(dchar[])[8972]).text,
	"&dscr;": (cast(dchar[])[119993]).text,
	"&dscy;": (cast(dchar[])[1109]).text,
	"&dsol;": (cast(dchar[])[10742]).text,
	"&dstrok;": (cast(dchar[])[273]).text,
	"&dtdot;": (cast(dchar[])[8945]).text,
	"&dtri;": (cast(dchar[])[9663]).text,
	"&dtrif;": (cast(dchar[])[9662]).text,
	"&duarr;": (cast(dchar[])[8693]).text,
	"&duhar;": (cast(dchar[])[10607]).text,
	"&dwangle;": (cast(dchar[])[10662]).text,
	"&dzcy;": (cast(dchar[])[1119]).text,
	"&dzigrarr;": (cast(dchar[])[10239]).text,
	"&eDDot;": (cast(dchar[])[10871]).text,
	"&eDot;": (cast(dchar[])[8785]).text,
	"&eacute": (cast(dchar[])[233]).text,
	"&eacute;": (cast(dchar[])[233]).text,
	"&easter;": (cast(dchar[])[10862]).text,
	"&ecaron;": (cast(dchar[])[283]).text,
	"&ecir;": (cast(dchar[])[8790]).text,
	"&ecirc": (cast(dchar[])[234]).text,
	"&ecirc;": (cast(dchar[])[234]).text,
	"&ecolon;": (cast(dchar[])[8789]).text,
	"&ecy;": (cast(dchar[])[1101]).text,
	"&edot;": (cast(dchar[])[279]).text,
	"&ee;": (cast(dchar[])[8519]).text,
	"&efDot;": (cast(dchar[])[8786]).text,
	"&efr;": (cast(dchar[])[120098]).text,
	"&eg;": (cast(dchar[])[10906]).text,
	"&egrave": (cast(dchar[])[232]).text,
	"&egrave;": (cast(dchar[])[232]).text,
	"&egs;": (cast(dchar[])[10902]).text,
	"&egsdot;": (cast(dchar[])[10904]).text,
	"&el;": (cast(dchar[])[10905]).text,
	"&elinters;": (cast(dchar[])[9191]).text,
	"&ell;": (cast(dchar[])[8467]).text,
	"&els;": (cast(dchar[])[10901]).text,
	"&elsdot;": (cast(dchar[])[10903]).text,
	"&emacr;": (cast(dchar[])[275]).text,
	"&empty;": (cast(dchar[])[8709]).text,
	"&emptyset;": (cast(dchar[])[8709]).text,
	"&emptyv;": (cast(dchar[])[8709]).text,
	"&emsp13;": (cast(dchar[])[8196]).text,
	"&emsp14;": (cast(dchar[])[8197]).text,
	"&emsp;": (cast(dchar[])[8195]).text,
	"&eng;": (cast(dchar[])[331]).text,
	"&ensp;": (cast(dchar[])[8194]).text,
	"&eogon;": (cast(dchar[])[281]).text,
	"&eopf;": (cast(dchar[])[120150]).text,
	"&epar;": (cast(dchar[])[8917]).text,
	"&eparsl;": (cast(dchar[])[10723]).text,
	"&eplus;": (cast(dchar[])[10865]).text,
	"&epsi;": (cast(dchar[])[949]).text,
	"&epsilon;": (cast(dchar[])[949]).text,
	"&epsiv;": (cast(dchar[])[1013]).text,
	"&eqcirc;": (cast(dchar[])[8790]).text,
	"&eqcolon;": (cast(dchar[])[8789]).text,
	"&eqsim;": (cast(dchar[])[8770]).text,
	"&eqslantgtr;": (cast(dchar[])[10902]).text,
	"&eqslantless;": (cast(dchar[])[10901]).text,
	"&equals;": (cast(dchar[])[61]).text,
	"&equest;": (cast(dchar[])[8799]).text,
	"&equiv;": (cast(dchar[])[8801]).text,
	"&equivDD;": (cast(dchar[])[10872]).text,
	"&eqvparsl;": (cast(dchar[])[10725]).text,
	"&erDot;": (cast(dchar[])[8787]).text,
	"&erarr;": (cast(dchar[])[10609]).text,
	"&escr;": (cast(dchar[])[8495]).text,
	"&esdot;": (cast(dchar[])[8784]).text,
	"&esim;": (cast(dchar[])[8770]).text,
	"&eta;": (cast(dchar[])[951]).text,
	"&eth": (cast(dchar[])[240]).text,
	"&eth;": (cast(dchar[])[240]).text,
	"&euml": (cast(dchar[])[235]).text,
	"&euml;": (cast(dchar[])[235]).text,
	"&euro;": (cast(dchar[])[8364]).text,
	"&excl;": (cast(dchar[])[33]).text,
	"&exist;": (cast(dchar[])[8707]).text,
	"&expectation;": (cast(dchar[])[8496]).text,
	"&exponentiale;": (cast(dchar[])[8519]).text,
	"&fallingdotseq;": (cast(dchar[])[8786]).text,
	"&fcy;": (cast(dchar[])[1092]).text,
	"&female;": (cast(dchar[])[9792]).text,
	"&ffilig;": (cast(dchar[])[64259]).text,
	"&fflig;": (cast(dchar[])[64256]).text,
	"&ffllig;": (cast(dchar[])[64260]).text,
	"&ffr;": (cast(dchar[])[120099]).text,
	"&filig;": (cast(dchar[])[64257]).text,
	"&fjlig;": (cast(dchar[])[102, 106]).text,
	"&flat;": (cast(dchar[])[9837]).text,
	"&fllig;": (cast(dchar[])[64258]).text,
	"&fltns;": (cast(dchar[])[9649]).text,
	"&fnof;": (cast(dchar[])[402]).text,
	"&fopf;": (cast(dchar[])[120151]).text,
	"&forall;": (cast(dchar[])[8704]).text,
	"&fork;": (cast(dchar[])[8916]).text,
	"&forkv;": (cast(dchar[])[10969]).text,
	"&fpartint;": (cast(dchar[])[10765]).text,
	"&frac12": (cast(dchar[])[189]).text,
	"&frac12;": (cast(dchar[])[189]).text,
	"&frac13;": (cast(dchar[])[8531]).text,
	"&frac14": (cast(dchar[])[188]).text,
	"&frac14;": (cast(dchar[])[188]).text,
	"&frac15;": (cast(dchar[])[8533]).text,
	"&frac16;": (cast(dchar[])[8537]).text,
	"&frac18;": (cast(dchar[])[8539]).text,
	"&frac23;": (cast(dchar[])[8532]).text,
	"&frac25;": (cast(dchar[])[8534]).text,
	"&frac34": (cast(dchar[])[190]).text,
	"&frac34;": (cast(dchar[])[190]).text,
	"&frac35;": (cast(dchar[])[8535]).text,
	"&frac38;": (cast(dchar[])[8540]).text,
	"&frac45;": (cast(dchar[])[8536]).text,
	"&frac56;": (cast(dchar[])[8538]).text,
	"&frac58;": (cast(dchar[])[8541]).text,
	"&frac78;": (cast(dchar[])[8542]).text,
	"&frasl;": (cast(dchar[])[8260]).text,
	"&frown;": (cast(dchar[])[8994]).text,
	"&fscr;": (cast(dchar[])[119995]).text,
	"&gE;": (cast(dchar[])[8807]).text,
	"&gEl;": (cast(dchar[])[10892]).text,
	"&gacute;": (cast(dchar[])[501]).text,
	"&gamma;": (cast(dchar[])[947]).text,
	"&gammad;": (cast(dchar[])[989]).text,
	"&gap;": (cast(dchar[])[10886]).text,
	"&gbreve;": (cast(dchar[])[287]).text,
	"&gcirc;": (cast(dchar[])[285]).text,
	"&gcy;": (cast(dchar[])[1075]).text,
	"&gdot;": (cast(dchar[])[289]).text,
	"&ge;": (cast(dchar[])[8805]).text,
	"&gel;": (cast(dchar[])[8923]).text,
	"&geq;": (cast(dchar[])[8805]).text,
	"&geqq;": (cast(dchar[])[8807]).text,
	"&geqslant;": (cast(dchar[])[10878]).text,
	"&ges;": (cast(dchar[])[10878]).text,
	"&gescc;": (cast(dchar[])[10921]).text,
	"&gesdot;": (cast(dchar[])[10880]).text,
	"&gesdoto;": (cast(dchar[])[10882]).text,
	"&gesdotol;": (cast(dchar[])[10884]).text,
	"&gesl;": (cast(dchar[])[8923, 65024]).text,
	"&gesles;": (cast(dchar[])[10900]).text,
	"&gfr;": (cast(dchar[])[120100]).text,
	"&gg;": (cast(dchar[])[8811]).text,
	"&ggg;": (cast(dchar[])[8921]).text,
	"&gimel;": (cast(dchar[])[8503]).text,
	"&gjcy;": (cast(dchar[])[1107]).text,
	"&gl;": (cast(dchar[])[8823]).text,
	"&glE;": (cast(dchar[])[10898]).text,
	"&gla;": (cast(dchar[])[10917]).text,
	"&glj;": (cast(dchar[])[10916]).text,
	"&gnE;": (cast(dchar[])[8809]).text,
	"&gnap;": (cast(dchar[])[10890]).text,
	"&gnapprox;": (cast(dchar[])[10890]).text,
	"&gne;": (cast(dchar[])[10888]).text,
	"&gneq;": (cast(dchar[])[10888]).text,
	"&gneqq;": (cast(dchar[])[8809]).text,
	"&gnsim;": (cast(dchar[])[8935]).text,
	"&gopf;": (cast(dchar[])[120152]).text,
	"&grave;": (cast(dchar[])[96]).text,
	"&gscr;": (cast(dchar[])[8458]).text,
	"&gsim;": (cast(dchar[])[8819]).text,
	"&gsime;": (cast(dchar[])[10894]).text,
	"&gsiml;": (cast(dchar[])[10896]).text,
	"&gt": (cast(dchar[])[62]).text,
	"&gt;": (cast(dchar[])[62]).text,
	"&gtcc;": (cast(dchar[])[10919]).text,
	"&gtcir;": (cast(dchar[])[10874]).text,
	"&gtdot;": (cast(dchar[])[8919]).text,
	"&gtlPar;": (cast(dchar[])[10645]).text,
	"&gtquest;": (cast(dchar[])[10876]).text,
	"&gtrapprox;": (cast(dchar[])[10886]).text,
	"&gtrarr;": (cast(dchar[])[10616]).text,
	"&gtrdot;": (cast(dchar[])[8919]).text,
	"&gtreqless;": (cast(dchar[])[8923]).text,
	"&gtreqqless;": (cast(dchar[])[10892]).text,
	"&gtrless;": (cast(dchar[])[8823]).text,
	"&gtrsim;": (cast(dchar[])[8819]).text,
	"&gvertneqq;": (cast(dchar[])[8809, 65024]).text,
	"&gvnE;": (cast(dchar[])[8809, 65024]).text,
	"&hArr;": (cast(dchar[])[8660]).text,
	"&hairsp;": (cast(dchar[])[8202]).text,
	"&half;": (cast(dchar[])[189]).text,
	"&hamilt;": (cast(dchar[])[8459]).text,
	"&hardcy;": (cast(dchar[])[1098]).text,
	"&harr;": (cast(dchar[])[8596]).text,
	"&harrcir;": (cast(dchar[])[10568]).text,
	"&harrw;": (cast(dchar[])[8621]).text,
	"&hbar;": (cast(dchar[])[8463]).text,
	"&hcirc;": (cast(dchar[])[293]).text,
	"&hearts;": (cast(dchar[])[9829]).text,
	"&heartsuit;": (cast(dchar[])[9829]).text,
	"&hellip;": (cast(dchar[])[8230]).text,
	"&hercon;": (cast(dchar[])[8889]).text,
	"&hfr;": (cast(dchar[])[120101]).text,
	"&hksearow;": (cast(dchar[])[10533]).text,
	"&hkswarow;": (cast(dchar[])[10534]).text,
	"&hoarr;": (cast(dchar[])[8703]).text,
	"&homtht;": (cast(dchar[])[8763]).text,
	"&hookleftarrow;": (cast(dchar[])[8617]).text,
	"&hookrightarrow;": (cast(dchar[])[8618]).text,
	"&hopf;": (cast(dchar[])[120153]).text,
	"&horbar;": (cast(dchar[])[8213]).text,
	"&hscr;": (cast(dchar[])[119997]).text,
	"&hslash;": (cast(dchar[])[8463]).text,
	"&hstrok;": (cast(dchar[])[295]).text,
	"&hybull;": (cast(dchar[])[8259]).text,
	"&hyphen;": (cast(dchar[])[8208]).text,
	"&iacute": (cast(dchar[])[237]).text,
	"&iacute;": (cast(dchar[])[237]).text,
	"&ic;": (cast(dchar[])[8291]).text,
	"&icirc": (cast(dchar[])[238]).text,
	"&icirc;": (cast(dchar[])[238]).text,
	"&icy;": (cast(dchar[])[1080]).text,
	"&iecy;": (cast(dchar[])[1077]).text,
	"&iexcl": (cast(dchar[])[161]).text,
	"&iexcl;": (cast(dchar[])[161]).text,
	"&iff;": (cast(dchar[])[8660]).text,
	"&ifr;": (cast(dchar[])[120102]).text,
	"&igrave": (cast(dchar[])[236]).text,
	"&igrave;": (cast(dchar[])[236]).text,
	"&ii;": (cast(dchar[])[8520]).text,
	"&iiiint;": (cast(dchar[])[10764]).text,
	"&iiint;": (cast(dchar[])[8749]).text,
	"&iinfin;": (cast(dchar[])[10716]).text,
	"&iiota;": (cast(dchar[])[8489]).text,
	"&ijlig;": (cast(dchar[])[307]).text,
	"&imacr;": (cast(dchar[])[299]).text,
	"&image;": (cast(dchar[])[8465]).text,
	"&imagline;": (cast(dchar[])[8464]).text,
	"&imagpart;": (cast(dchar[])[8465]).text,
	"&imath;": (cast(dchar[])[305]).text,
	"&imof;": (cast(dchar[])[8887]).text,
	"&imped;": (cast(dchar[])[437]).text,
	"&in;": (cast(dchar[])[8712]).text,
	"&incare;": (cast(dchar[])[8453]).text,
	"&infin;": (cast(dchar[])[8734]).text,
	"&infintie;": (cast(dchar[])[10717]).text,
	"&inodot;": (cast(dchar[])[305]).text,
	"&int;": (cast(dchar[])[8747]).text,
	"&intcal;": (cast(dchar[])[8890]).text,
	"&integers;": (cast(dchar[])[8484]).text,
	"&intercal;": (cast(dchar[])[8890]).text,
	"&intlarhk;": (cast(dchar[])[10775]).text,
	"&intprod;": (cast(dchar[])[10812]).text,
	"&iocy;": (cast(dchar[])[1105]).text,
	"&iogon;": (cast(dchar[])[303]).text,
	"&iopf;": (cast(dchar[])[120154]).text,
	"&iota;": (cast(dchar[])[953]).text,
	"&iprod;": (cast(dchar[])[10812]).text,
	"&iquest": (cast(dchar[])[191]).text,
	"&iquest;": (cast(dchar[])[191]).text,
	"&iscr;": (cast(dchar[])[119998]).text,
	"&isin;": (cast(dchar[])[8712]).text,
	"&isinE;": (cast(dchar[])[8953]).text,
	"&isindot;": (cast(dchar[])[8949]).text,
	"&isins;": (cast(dchar[])[8948]).text,
	"&isinsv;": (cast(dchar[])[8947]).text,
	"&isinv;": (cast(dchar[])[8712]).text,
	"&it;": (cast(dchar[])[8290]).text,
	"&itilde;": (cast(dchar[])[297]).text,
	"&iukcy;": (cast(dchar[])[1110]).text,
	"&iuml": (cast(dchar[])[239]).text,
	"&iuml;": (cast(dchar[])[239]).text,
	"&jcirc;": (cast(dchar[])[309]).text,
	"&jcy;": (cast(dchar[])[1081]).text,
	"&jfr;": (cast(dchar[])[120103]).text,
	"&jmath;": (cast(dchar[])[567]).text,
	"&jopf;": (cast(dchar[])[120155]).text,
	"&jscr;": (cast(dchar[])[119999]).text,
	"&jsercy;": (cast(dchar[])[1112]).text,
	"&jukcy;": (cast(dchar[])[1108]).text,
	"&kappa;": (cast(dchar[])[954]).text,
	"&kappav;": (cast(dchar[])[1008]).text,
	"&kcedil;": (cast(dchar[])[311]).text,
	"&kcy;": (cast(dchar[])[1082]).text,
	"&kfr;": (cast(dchar[])[120104]).text,
	"&kgreen;": (cast(dchar[])[312]).text,
	"&khcy;": (cast(dchar[])[1093]).text,
	"&kjcy;": (cast(dchar[])[1116]).text,
	"&kopf;": (cast(dchar[])[120156]).text,
	"&kscr;": (cast(dchar[])[120000]).text,
	"&lAarr;": (cast(dchar[])[8666]).text,
	"&lArr;": (cast(dchar[])[8656]).text,
	"&lAtail;": (cast(dchar[])[10523]).text,
	"&lBarr;": (cast(dchar[])[10510]).text,
	"&lE;": (cast(dchar[])[8806]).text,
	"&lEg;": (cast(dchar[])[10891]).text,
	"&lHar;": (cast(dchar[])[10594]).text,
	"&lacute;": (cast(dchar[])[314]).text,
	"&laemptyv;": (cast(dchar[])[10676]).text,
	"&lagran;": (cast(dchar[])[8466]).text,
	"&lambda;": (cast(dchar[])[955]).text,
	"&lang;": (cast(dchar[])[10216]).text,
	"&langd;": (cast(dchar[])[10641]).text,
	"&langle;": (cast(dchar[])[10216]).text,
	"&lap;": (cast(dchar[])[10885]).text,
	"&laquo": (cast(dchar[])[171]).text,
	"&laquo;": (cast(dchar[])[171]).text,
	"&larr;": (cast(dchar[])[8592]).text,
	"&larrb;": (cast(dchar[])[8676]).text,
	"&larrbfs;": (cast(dchar[])[10527]).text,
	"&larrfs;": (cast(dchar[])[10525]).text,
	"&larrhk;": (cast(dchar[])[8617]).text,
	"&larrlp;": (cast(dchar[])[8619]).text,
	"&larrpl;": (cast(dchar[])[10553]).text,
	"&larrsim;": (cast(dchar[])[10611]).text,
	"&larrtl;": (cast(dchar[])[8610]).text,
	"&lat;": (cast(dchar[])[10923]).text,
	"&latail;": (cast(dchar[])[10521]).text,
	"&late;": (cast(dchar[])[10925]).text,
	"&lates;": (cast(dchar[])[10925, 65024]).text,
	"&lbarr;": (cast(dchar[])[10508]).text,
	"&lbbrk;": (cast(dchar[])[10098]).text,
	"&lbrace;": (cast(dchar[])[123]).text,
	"&lbrack;": (cast(dchar[])[91]).text,
	"&lbrke;": (cast(dchar[])[10635]).text,
	"&lbrksld;": (cast(dchar[])[10639]).text,
	"&lbrkslu;": (cast(dchar[])[10637]).text,
	"&lcaron;": (cast(dchar[])[318]).text,
	"&lcedil;": (cast(dchar[])[316]).text,
	"&lceil;": (cast(dchar[])[8968]).text,
	"&lcub;": (cast(dchar[])[123]).text,
	"&lcy;": (cast(dchar[])[1083]).text,
	"&ldca;": (cast(dchar[])[10550]).text,
	"&ldquo;": (cast(dchar[])[8220]).text,
	"&ldquor;": (cast(dchar[])[8222]).text,
	"&ldrdhar;": (cast(dchar[])[10599]).text,
	"&ldrushar;": (cast(dchar[])[10571]).text,
	"&ldsh;": (cast(dchar[])[8626]).text,
	"&le;": (cast(dchar[])[8804]).text,
	"&leftarrow;": (cast(dchar[])[8592]).text,
	"&leftarrowtail;": (cast(dchar[])[8610]).text,
	"&leftharpoondown;": (cast(dchar[])[8637]).text,
	"&leftharpoonup;": (cast(dchar[])[8636]).text,
	"&leftleftarrows;": (cast(dchar[])[8647]).text,
	"&leftrightarrow;": (cast(dchar[])[8596]).text,
	"&leftrightarrows;": (cast(dchar[])[8646]).text,
	"&leftrightharpoons;": (cast(dchar[])[8651]).text,
	"&leftrightsquigarrow;": (cast(dchar[])[8621]).text,
	"&leftthreetimes;": (cast(dchar[])[8907]).text,
	"&leg;": (cast(dchar[])[8922]).text,
	"&leq;": (cast(dchar[])[8804]).text,
	"&leqq;": (cast(dchar[])[8806]).text,
	"&leqslant;": (cast(dchar[])[10877]).text,
	"&les;": (cast(dchar[])[10877]).text,
	"&lescc;": (cast(dchar[])[10920]).text,
	"&lesdot;": (cast(dchar[])[10879]).text,
	"&lesdoto;": (cast(dchar[])[10881]).text,
	"&lesdotor;": (cast(dchar[])[10883]).text,
	"&lesg;": (cast(dchar[])[8922, 65024]).text,
	"&lesges;": (cast(dchar[])[10899]).text,
	"&lessapprox;": (cast(dchar[])[10885]).text,
	"&lessdot;": (cast(dchar[])[8918]).text,
	"&lesseqgtr;": (cast(dchar[])[8922]).text,
	"&lesseqqgtr;": (cast(dchar[])[10891]).text,
	"&lessgtr;": (cast(dchar[])[8822]).text,
	"&lesssim;": (cast(dchar[])[8818]).text,
	"&lfisht;": (cast(dchar[])[10620]).text,
	"&lfloor;": (cast(dchar[])[8970]).text,
	"&lfr;": (cast(dchar[])[120105]).text,
	"&lg;": (cast(dchar[])[8822]).text,
	"&lgE;": (cast(dchar[])[10897]).text,
	"&lhard;": (cast(dchar[])[8637]).text,
	"&lharu;": (cast(dchar[])[8636]).text,
	"&lharul;": (cast(dchar[])[10602]).text,
	"&lhblk;": (cast(dchar[])[9604]).text,
	"&ljcy;": (cast(dchar[])[1113]).text,
	"&ll;": (cast(dchar[])[8810]).text,
	"&llarr;": (cast(dchar[])[8647]).text,
	"&llcorner;": (cast(dchar[])[8990]).text,
	"&llhard;": (cast(dchar[])[10603]).text,
	"&lltri;": (cast(dchar[])[9722]).text,
	"&lmidot;": (cast(dchar[])[320]).text,
	"&lmoust;": (cast(dchar[])[9136]).text,
	"&lmoustache;": (cast(dchar[])[9136]).text,
	"&lnE;": (cast(dchar[])[8808]).text,
	"&lnap;": (cast(dchar[])[10889]).text,
	"&lnapprox;": (cast(dchar[])[10889]).text,
	"&lne;": (cast(dchar[])[10887]).text,
	"&lneq;": (cast(dchar[])[10887]).text,
	"&lneqq;": (cast(dchar[])[8808]).text,
	"&lnsim;": (cast(dchar[])[8934]).text,
	"&loang;": (cast(dchar[])[10220]).text,
	"&loarr;": (cast(dchar[])[8701]).text,
	"&lobrk;": (cast(dchar[])[10214]).text,
	"&longleftarrow;": (cast(dchar[])[10229]).text,
	"&longleftrightarrow;": (cast(dchar[])[10231]).text,
	"&longmapsto;": (cast(dchar[])[10236]).text,
	"&longrightarrow;": (cast(dchar[])[10230]).text,
	"&looparrowleft;": (cast(dchar[])[8619]).text,
	"&looparrowright;": (cast(dchar[])[8620]).text,
	"&lopar;": (cast(dchar[])[10629]).text,
	"&lopf;": (cast(dchar[])[120157]).text,
	"&loplus;": (cast(dchar[])[10797]).text,
	"&lotimes;": (cast(dchar[])[10804]).text,
	"&lowast;": (cast(dchar[])[8727]).text,
	"&lowbar;": (cast(dchar[])[95]).text,
	"&loz;": (cast(dchar[])[9674]).text,
	"&lozenge;": (cast(dchar[])[9674]).text,
	"&lozf;": (cast(dchar[])[10731]).text,
	"&lpar;": (cast(dchar[])[40]).text,
	"&lparlt;": (cast(dchar[])[10643]).text,
	"&lrarr;": (cast(dchar[])[8646]).text,
	"&lrcorner;": (cast(dchar[])[8991]).text,
	"&lrhar;": (cast(dchar[])[8651]).text,
	"&lrhard;": (cast(dchar[])[10605]).text,
	"&lrm;": (cast(dchar[])[8206]).text,
	"&lrtri;": (cast(dchar[])[8895]).text,
	"&lsaquo;": (cast(dchar[])[8249]).text,
	"&lscr;": (cast(dchar[])[120001]).text,
	"&lsh;": (cast(dchar[])[8624]).text,
	"&lsim;": (cast(dchar[])[8818]).text,
	"&lsime;": (cast(dchar[])[10893]).text,
	"&lsimg;": (cast(dchar[])[10895]).text,
	"&lsqb;": (cast(dchar[])[91]).text,
	"&lsquo;": (cast(dchar[])[8216]).text,
	"&lsquor;": (cast(dchar[])[8218]).text,
	"&lstrok;": (cast(dchar[])[322]).text,
	"&lt": (cast(dchar[])[60]).text,
	"&lt;": (cast(dchar[])[60]).text,
	"&ltcc;": (cast(dchar[])[10918]).text,
	"&ltcir;": (cast(dchar[])[10873]).text,
	"&ltdot;": (cast(dchar[])[8918]).text,
	"&lthree;": (cast(dchar[])[8907]).text,
	"&ltimes;": (cast(dchar[])[8905]).text,
	"&ltlarr;": (cast(dchar[])[10614]).text,
	"&ltquest;": (cast(dchar[])[10875]).text,
	"&ltrPar;": (cast(dchar[])[10646]).text,
	"&ltri;": (cast(dchar[])[9667]).text,
	"&ltrie;": (cast(dchar[])[8884]).text,
	"&ltrif;": (cast(dchar[])[9666]).text,
	"&lurdshar;": (cast(dchar[])[10570]).text,
	"&luruhar;": (cast(dchar[])[10598]).text,
	"&lvertneqq;": (cast(dchar[])[8808, 65024]).text,
	"&lvnE;": (cast(dchar[])[8808, 65024]).text,
	"&mDDot;": (cast(dchar[])[8762]).text,
	"&macr": (cast(dchar[])[175]).text,
	"&macr;": (cast(dchar[])[175]).text,
	"&male;": (cast(dchar[])[9794]).text,
	"&malt;": (cast(dchar[])[10016]).text,
	"&maltese;": (cast(dchar[])[10016]).text,
	"&map;": (cast(dchar[])[8614]).text,
	"&mapsto;": (cast(dchar[])[8614]).text,
	"&mapstodown;": (cast(dchar[])[8615]).text,
	"&mapstoleft;": (cast(dchar[])[8612]).text,
	"&mapstoup;": (cast(dchar[])[8613]).text,
	"&marker;": (cast(dchar[])[9646]).text,
	"&mcomma;": (cast(dchar[])[10793]).text,
	"&mcy;": (cast(dchar[])[1084]).text,
	"&mdash;": (cast(dchar[])[8212]).text,
	"&measuredangle;": (cast(dchar[])[8737]).text,
	"&mfr;": (cast(dchar[])[120106]).text,
	"&mho;": (cast(dchar[])[8487]).text,
	"&micro": (cast(dchar[])[181]).text,
	"&micro;": (cast(dchar[])[181]).text,
	"&mid;": (cast(dchar[])[8739]).text,
	"&midast;": (cast(dchar[])[42]).text,
	"&midcir;": (cast(dchar[])[10992]).text,
	"&middot": (cast(dchar[])[183]).text,
	"&middot;": (cast(dchar[])[183]).text,
	"&minus;": (cast(dchar[])[8722]).text,
	"&minusb;": (cast(dchar[])[8863]).text,
	"&minusd;": (cast(dchar[])[8760]).text,
	"&minusdu;": (cast(dchar[])[10794]).text,
	"&mlcp;": (cast(dchar[])[10971]).text,
	"&mldr;": (cast(dchar[])[8230]).text,
	"&mnplus;": (cast(dchar[])[8723]).text,
	"&models;": (cast(dchar[])[8871]).text,
	"&mopf;": (cast(dchar[])[120158]).text,
	"&mp;": (cast(dchar[])[8723]).text,
	"&mscr;": (cast(dchar[])[120002]).text,
	"&mstpos;": (cast(dchar[])[8766]).text,
	"&mu;": (cast(dchar[])[956]).text,
	"&multimap;": (cast(dchar[])[8888]).text,
	"&mumap;": (cast(dchar[])[8888]).text,
	"&nGg;": (cast(dchar[])[8921, 824]).text,
	"&nGt;": (cast(dchar[])[8811, 8402]).text,
	"&nGtv;": (cast(dchar[])[8811, 824]).text,
	"&nLeftarrow;": (cast(dchar[])[8653]).text,
	"&nLeftrightarrow;": (cast(dchar[])[8654]).text,
	"&nLl;": (cast(dchar[])[8920, 824]).text,
	"&nLt;": (cast(dchar[])[8810, 8402]).text,
	"&nLtv;": (cast(dchar[])[8810, 824]).text,
	"&nRightarrow;": (cast(dchar[])[8655]).text,
	"&nVDash;": (cast(dchar[])[8879]).text,
	"&nVdash;": (cast(dchar[])[8878]).text,
	"&nabla;": (cast(dchar[])[8711]).text,
	"&nacute;": (cast(dchar[])[324]).text,
	"&nang;": (cast(dchar[])[8736, 8402]).text,
	"&nap;": (cast(dchar[])[8777]).text,
	"&napE;": (cast(dchar[])[10864, 824]).text,
	"&napid;": (cast(dchar[])[8779, 824]).text,
	"&napos;": (cast(dchar[])[329]).text,
	"&napprox;": (cast(dchar[])[8777]).text,
	"&natur;": (cast(dchar[])[9838]).text,
	"&natural;": (cast(dchar[])[9838]).text,
	"&naturals;": (cast(dchar[])[8469]).text,
	"&nbsp": (cast(dchar[])[160]).text,
	"&nbsp;": (cast(dchar[])[160]).text,
	"&nbump;": (cast(dchar[])[8782, 824]).text,
	"&nbumpe;": (cast(dchar[])[8783, 824]).text,
	"&ncap;": (cast(dchar[])[10819]).text,
	"&ncaron;": (cast(dchar[])[328]).text,
	"&ncedil;": (cast(dchar[])[326]).text,
	"&ncong;": (cast(dchar[])[8775]).text,
	"&ncongdot;": (cast(dchar[])[10861, 824]).text,
	"&ncup;": (cast(dchar[])[10818]).text,
	"&ncy;": (cast(dchar[])[1085]).text,
	"&ndash;": (cast(dchar[])[8211]).text,
	"&ne;": (cast(dchar[])[8800]).text,
	"&neArr;": (cast(dchar[])[8663]).text,
	"&nearhk;": (cast(dchar[])[10532]).text,
	"&nearr;": (cast(dchar[])[8599]).text,
	"&nearrow;": (cast(dchar[])[8599]).text,
	"&nedot;": (cast(dchar[])[8784, 824]).text,
	"&nequiv;": (cast(dchar[])[8802]).text,
	"&nesear;": (cast(dchar[])[10536]).text,
	"&nesim;": (cast(dchar[])[8770, 824]).text,
	"&nexist;": (cast(dchar[])[8708]).text,
	"&nexists;": (cast(dchar[])[8708]).text,
	"&nfr;": (cast(dchar[])[120107]).text,
	"&ngE;": (cast(dchar[])[8807, 824]).text,
	"&nge;": (cast(dchar[])[8817]).text,
	"&ngeq;": (cast(dchar[])[8817]).text,
	"&ngeqq;": (cast(dchar[])[8807, 824]).text,
	"&ngeqslant;": (cast(dchar[])[10878, 824]).text,
	"&nges;": (cast(dchar[])[10878, 824]).text,
	"&ngsim;": (cast(dchar[])[8821]).text,
	"&ngt;": (cast(dchar[])[8815]).text,
	"&ngtr;": (cast(dchar[])[8815]).text,
	"&nhArr;": (cast(dchar[])[8654]).text,
	"&nharr;": (cast(dchar[])[8622]).text,
	"&nhpar;": (cast(dchar[])[10994]).text,
	"&ni;": (cast(dchar[])[8715]).text,
	"&nis;": (cast(dchar[])[8956]).text,
	"&nisd;": (cast(dchar[])[8954]).text,
	"&niv;": (cast(dchar[])[8715]).text,
	"&njcy;": (cast(dchar[])[1114]).text,
	"&nlArr;": (cast(dchar[])[8653]).text,
	"&nlE;": (cast(dchar[])[8806, 824]).text,
	"&nlarr;": (cast(dchar[])[8602]).text,
	"&nldr;": (cast(dchar[])[8229]).text,
	"&nle;": (cast(dchar[])[8816]).text,
	"&nleftarrow;": (cast(dchar[])[8602]).text,
	"&nleftrightarrow;": (cast(dchar[])[8622]).text,
	"&nleq;": (cast(dchar[])[8816]).text,
	"&nleqq;": (cast(dchar[])[8806, 824]).text,
	"&nleqslant;": (cast(dchar[])[10877, 824]).text,
	"&nles;": (cast(dchar[])[10877, 824]).text,
	"&nless;": (cast(dchar[])[8814]).text,
	"&nlsim;": (cast(dchar[])[8820]).text,
	"&nlt;": (cast(dchar[])[8814]).text,
	"&nltri;": (cast(dchar[])[8938]).text,
	"&nltrie;": (cast(dchar[])[8940]).text,
	"&nmid;": (cast(dchar[])[8740]).text,
	"&nopf;": (cast(dchar[])[120159]).text,
	"&not": (cast(dchar[])[172]).text,
	"&not;": (cast(dchar[])[172]).text,
	"&notin;": (cast(dchar[])[8713]).text,
	"&notinE;": (cast(dchar[])[8953, 824]).text,
	"&notindot;": (cast(dchar[])[8949, 824]).text,
	"&notinva;": (cast(dchar[])[8713]).text,
	"&notinvb;": (cast(dchar[])[8951]).text,
	"&notinvc;": (cast(dchar[])[8950]).text,
	"&notni;": (cast(dchar[])[8716]).text,
	"&notniva;": (cast(dchar[])[8716]).text,
	"&notnivb;": (cast(dchar[])[8958]).text,
	"&notnivc;": (cast(dchar[])[8957]).text,
	"&npar;": (cast(dchar[])[8742]).text,
	"&nparallel;": (cast(dchar[])[8742]).text,
	"&nparsl;": (cast(dchar[])[11005, 8421]).text,
	"&npart;": (cast(dchar[])[8706, 824]).text,
	"&npolint;": (cast(dchar[])[10772]).text,
	"&npr;": (cast(dchar[])[8832]).text,
	"&nprcue;": (cast(dchar[])[8928]).text,
	"&npre;": (cast(dchar[])[10927, 824]).text,
	"&nprec;": (cast(dchar[])[8832]).text,
	"&npreceq;": (cast(dchar[])[10927, 824]).text,
	"&nrArr;": (cast(dchar[])[8655]).text,
	"&nrarr;": (cast(dchar[])[8603]).text,
	"&nrarrc;": (cast(dchar[])[10547, 824]).text,
	"&nrarrw;": (cast(dchar[])[8605, 824]).text,
	"&nrightarrow;": (cast(dchar[])[8603]).text,
	"&nrtri;": (cast(dchar[])[8939]).text,
	"&nrtrie;": (cast(dchar[])[8941]).text,
	"&nsc;": (cast(dchar[])[8833]).text,
	"&nsccue;": (cast(dchar[])[8929]).text,
	"&nsce;": (cast(dchar[])[10928, 824]).text,
	"&nscr;": (cast(dchar[])[120003]).text,
	"&nshortmid;": (cast(dchar[])[8740]).text,
	"&nshortparallel;": (cast(dchar[])[8742]).text,
	"&nsim;": (cast(dchar[])[8769]).text,
	"&nsime;": (cast(dchar[])[8772]).text,
	"&nsimeq;": (cast(dchar[])[8772]).text,
	"&nsmid;": (cast(dchar[])[8740]).text,
	"&nspar;": (cast(dchar[])[8742]).text,
	"&nsqsube;": (cast(dchar[])[8930]).text,
	"&nsqsupe;": (cast(dchar[])[8931]).text,
	"&nsub;": (cast(dchar[])[8836]).text,
	"&nsubE;": (cast(dchar[])[10949, 824]).text,
	"&nsube;": (cast(dchar[])[8840]).text,
	"&nsubset;": (cast(dchar[])[8834, 8402]).text,
	"&nsubseteq;": (cast(dchar[])[8840]).text,
	"&nsubseteqq;": (cast(dchar[])[10949, 824]).text,
	"&nsucc;": (cast(dchar[])[8833]).text,
	"&nsucceq;": (cast(dchar[])[10928, 824]).text,
	"&nsup;": (cast(dchar[])[8837]).text,
	"&nsupE;": (cast(dchar[])[10950, 824]).text,
	"&nsupe;": (cast(dchar[])[8841]).text,
	"&nsupset;": (cast(dchar[])[8835, 8402]).text,
	"&nsupseteq;": (cast(dchar[])[8841]).text,
	"&nsupseteqq;": (cast(dchar[])[10950, 824]).text,
	"&ntgl;": (cast(dchar[])[8825]).text,
	"&ntilde": (cast(dchar[])[241]).text,
	"&ntilde;": (cast(dchar[])[241]).text,
	"&ntlg;": (cast(dchar[])[8824]).text,
	"&ntriangleleft;": (cast(dchar[])[8938]).text,
	"&ntrianglelefteq;": (cast(dchar[])[8940]).text,
	"&ntriangleright;": (cast(dchar[])[8939]).text,
	"&ntrianglerighteq;": (cast(dchar[])[8941]).text,
	"&nu;": (cast(dchar[])[957]).text,
	"&num;": (cast(dchar[])[35]).text,
	"&numero;": (cast(dchar[])[8470]).text,
	"&numsp;": (cast(dchar[])[8199]).text,
	"&nvDash;": (cast(dchar[])[8877]).text,
	"&nvHarr;": (cast(dchar[])[10500]).text,
	"&nvap;": (cast(dchar[])[8781, 8402]).text,
	"&nvdash;": (cast(dchar[])[8876]).text,
	"&nvge;": (cast(dchar[])[8805, 8402]).text,
	"&nvgt;": (cast(dchar[])[62, 8402]).text,
	"&nvinfin;": (cast(dchar[])[10718]).text,
	"&nvlArr;": (cast(dchar[])[10498]).text,
	"&nvle;": (cast(dchar[])[8804, 8402]).text,
	"&nvlt;": (cast(dchar[])[60, 8402]).text,
	"&nvltrie;": (cast(dchar[])[8884, 8402]).text,
	"&nvrArr;": (cast(dchar[])[10499]).text,
	"&nvrtrie;": (cast(dchar[])[8885, 8402]).text,
	"&nvsim;": (cast(dchar[])[8764, 8402]).text,
	"&nwArr;": (cast(dchar[])[8662]).text,
	"&nwarhk;": (cast(dchar[])[10531]).text,
	"&nwarr;": (cast(dchar[])[8598]).text,
	"&nwarrow;": (cast(dchar[])[8598]).text,
	"&nwnear;": (cast(dchar[])[10535]).text,
	"&oS;": (cast(dchar[])[9416]).text,
	"&oacute": (cast(dchar[])[243]).text,
	"&oacute;": (cast(dchar[])[243]).text,
	"&oast;": (cast(dchar[])[8859]).text,
	"&ocir;": (cast(dchar[])[8858]).text,
	"&ocirc": (cast(dchar[])[244]).text,
	"&ocirc;": (cast(dchar[])[244]).text,
	"&ocy;": (cast(dchar[])[1086]).text,
	"&odash;": (cast(dchar[])[8861]).text,
	"&odblac;": (cast(dchar[])[337]).text,
	"&odiv;": (cast(dchar[])[10808]).text,
	"&odot;": (cast(dchar[])[8857]).text,
	"&odsold;": (cast(dchar[])[10684]).text,
	"&oelig;": (cast(dchar[])[339]).text,
	"&ofcir;": (cast(dchar[])[10687]).text,
	"&ofr;": (cast(dchar[])[120108]).text,
	"&ogon;": (cast(dchar[])[731]).text,
	"&ograve": (cast(dchar[])[242]).text,
	"&ograve;": (cast(dchar[])[242]).text,
	"&ogt;": (cast(dchar[])[10689]).text,
	"&ohbar;": (cast(dchar[])[10677]).text,
	"&ohm;": (cast(dchar[])[937]).text,
	"&oint;": (cast(dchar[])[8750]).text,
	"&olarr;": (cast(dchar[])[8634]).text,
	"&olcir;": (cast(dchar[])[10686]).text,
	"&olcross;": (cast(dchar[])[10683]).text,
	"&oline;": (cast(dchar[])[8254]).text,
	"&olt;": (cast(dchar[])[10688]).text,
	"&omacr;": (cast(dchar[])[333]).text,
	"&omega;": (cast(dchar[])[969]).text,
	"&omicron;": (cast(dchar[])[959]).text,
	"&omid;": (cast(dchar[])[10678]).text,
	"&ominus;": (cast(dchar[])[8854]).text,
	"&oopf;": (cast(dchar[])[120160]).text,
	"&opar;": (cast(dchar[])[10679]).text,
	"&operp;": (cast(dchar[])[10681]).text,
	"&oplus;": (cast(dchar[])[8853]).text,
	"&or;": (cast(dchar[])[8744]).text,
	"&orarr;": (cast(dchar[])[8635]).text,
	"&ord;": (cast(dchar[])[10845]).text,
	"&order;": (cast(dchar[])[8500]).text,
	"&orderof;": (cast(dchar[])[8500]).text,
	"&ordf": (cast(dchar[])[170]).text,
	"&ordf;": (cast(dchar[])[170]).text,
	"&ordm": (cast(dchar[])[186]).text,
	"&ordm;": (cast(dchar[])[186]).text,
	"&origof;": (cast(dchar[])[8886]).text,
	"&oror;": (cast(dchar[])[10838]).text,
	"&orslope;": (cast(dchar[])[10839]).text,
	"&orv;": (cast(dchar[])[10843]).text,
	"&oscr;": (cast(dchar[])[8500]).text,
	"&oslash": (cast(dchar[])[248]).text,
	"&oslash;": (cast(dchar[])[248]).text,
	"&osol;": (cast(dchar[])[8856]).text,
	"&otilde": (cast(dchar[])[245]).text,
	"&otilde;": (cast(dchar[])[245]).text,
	"&otimes;": (cast(dchar[])[8855]).text,
	"&otimesas;": (cast(dchar[])[10806]).text,
	"&ouml": (cast(dchar[])[246]).text,
	"&ouml;": (cast(dchar[])[246]).text,
	"&ovbar;": (cast(dchar[])[9021]).text,
	"&par;": (cast(dchar[])[8741]).text,
	"&para": (cast(dchar[])[182]).text,
	"&para;": (cast(dchar[])[182]).text,
	"&parallel;": (cast(dchar[])[8741]).text,
	"&parsim;": (cast(dchar[])[10995]).text,
	"&parsl;": (cast(dchar[])[11005]).text,
	"&part;": (cast(dchar[])[8706]).text,
	"&pcy;": (cast(dchar[])[1087]).text,
	"&percnt;": (cast(dchar[])[37]).text,
	"&period;": (cast(dchar[])[46]).text,
	"&permil;": (cast(dchar[])[8240]).text,
	"&perp;": (cast(dchar[])[8869]).text,
	"&pertenk;": (cast(dchar[])[8241]).text,
	"&pfr;": (cast(dchar[])[120109]).text,
	"&phi;": (cast(dchar[])[966]).text,
	"&phiv;": (cast(dchar[])[981]).text,
	"&phmmat;": (cast(dchar[])[8499]).text,
	"&phone;": (cast(dchar[])[9742]).text,
	"&pi;": (cast(dchar[])[960]).text,
	"&pitchfork;": (cast(dchar[])[8916]).text,
	"&piv;": (cast(dchar[])[982]).text,
	"&planck;": (cast(dchar[])[8463]).text,
	"&planckh;": (cast(dchar[])[8462]).text,
	"&plankv;": (cast(dchar[])[8463]).text,
	"&plus;": (cast(dchar[])[43]).text,
	"&plusacir;": (cast(dchar[])[10787]).text,
	"&plusb;": (cast(dchar[])[8862]).text,
	"&pluscir;": (cast(dchar[])[10786]).text,
	"&plusdo;": (cast(dchar[])[8724]).text,
	"&plusdu;": (cast(dchar[])[10789]).text,
	"&pluse;": (cast(dchar[])[10866]).text,
	"&plusmn": (cast(dchar[])[177]).text,
	"&plusmn;": (cast(dchar[])[177]).text,
	"&plussim;": (cast(dchar[])[10790]).text,
	"&plustwo;": (cast(dchar[])[10791]).text,
	"&pm;": (cast(dchar[])[177]).text,
	"&pointint;": (cast(dchar[])[10773]).text,
	"&popf;": (cast(dchar[])[120161]).text,
	"&pound": (cast(dchar[])[163]).text,
	"&pound;": (cast(dchar[])[163]).text,
	"&pr;": (cast(dchar[])[8826]).text,
	"&prE;": (cast(dchar[])[10931]).text,
	"&prap;": (cast(dchar[])[10935]).text,
	"&prcue;": (cast(dchar[])[8828]).text,
	"&pre;": (cast(dchar[])[10927]).text,
	"&prec;": (cast(dchar[])[8826]).text,
	"&precapprox;": (cast(dchar[])[10935]).text,
	"&preccurlyeq;": (cast(dchar[])[8828]).text,
	"&preceq;": (cast(dchar[])[10927]).text,
	"&precnapprox;": (cast(dchar[])[10937]).text,
	"&precneqq;": (cast(dchar[])[10933]).text,
	"&precnsim;": (cast(dchar[])[8936]).text,
	"&precsim;": (cast(dchar[])[8830]).text,
	"&prime;": (cast(dchar[])[8242]).text,
	"&primes;": (cast(dchar[])[8473]).text,
	"&prnE;": (cast(dchar[])[10933]).text,
	"&prnap;": (cast(dchar[])[10937]).text,
	"&prnsim;": (cast(dchar[])[8936]).text,
	"&prod;": (cast(dchar[])[8719]).text,
	"&profalar;": (cast(dchar[])[9006]).text,
	"&profline;": (cast(dchar[])[8978]).text,
	"&profsurf;": (cast(dchar[])[8979]).text,
	"&prop;": (cast(dchar[])[8733]).text,
	"&propto;": (cast(dchar[])[8733]).text,
	"&prsim;": (cast(dchar[])[8830]).text,
	"&prurel;": (cast(dchar[])[8880]).text,
	"&pscr;": (cast(dchar[])[120005]).text,
	"&psi;": (cast(dchar[])[968]).text,
	"&puncsp;": (cast(dchar[])[8200]).text,
	"&qfr;": (cast(dchar[])[120110]).text,
	"&qint;": (cast(dchar[])[10764]).text,
	"&qopf;": (cast(dchar[])[120162]).text,
	"&qprime;": (cast(dchar[])[8279]).text,
	"&qscr;": (cast(dchar[])[120006]).text,
	"&quaternions;": (cast(dchar[])[8461]).text,
	"&quatint;": (cast(dchar[])[10774]).text,
	"&quest;": (cast(dchar[])[63]).text,
	"&questeq;": (cast(dchar[])[8799]).text,
	"&quot": (cast(dchar[])[34]).text,
	"&quot;": (cast(dchar[])[34]).text,
	"&rAarr;": (cast(dchar[])[8667]).text,
	"&rArr;": (cast(dchar[])[8658]).text,
	"&rAtail;": (cast(dchar[])[10524]).text,
	"&rBarr;": (cast(dchar[])[10511]).text,
	"&rHar;": (cast(dchar[])[10596]).text,
	"&race;": (cast(dchar[])[8765, 817]).text,
	"&racute;": (cast(dchar[])[341]).text,
	"&radic;": (cast(dchar[])[8730]).text,
	"&raemptyv;": (cast(dchar[])[10675]).text,
	"&rang;": (cast(dchar[])[10217]).text,
	"&rangd;": (cast(dchar[])[10642]).text,
	"&range;": (cast(dchar[])[10661]).text,
	"&rangle;": (cast(dchar[])[10217]).text,
	"&raquo": (cast(dchar[])[187]).text,
	"&raquo;": (cast(dchar[])[187]).text,
	"&rarr;": (cast(dchar[])[8594]).text,
	"&rarrap;": (cast(dchar[])[10613]).text,
	"&rarrb;": (cast(dchar[])[8677]).text,
	"&rarrbfs;": (cast(dchar[])[10528]).text,
	"&rarrc;": (cast(dchar[])[10547]).text,
	"&rarrfs;": (cast(dchar[])[10526]).text,
	"&rarrhk;": (cast(dchar[])[8618]).text,
	"&rarrlp;": (cast(dchar[])[8620]).text,
	"&rarrpl;": (cast(dchar[])[10565]).text,
	"&rarrsim;": (cast(dchar[])[10612]).text,
	"&rarrtl;": (cast(dchar[])[8611]).text,
	"&rarrw;": (cast(dchar[])[8605]).text,
	"&ratail;": (cast(dchar[])[10522]).text,
	"&ratio;": (cast(dchar[])[8758]).text,
	"&rationals;": (cast(dchar[])[8474]).text,
	"&rbarr;": (cast(dchar[])[10509]).text,
	"&rbbrk;": (cast(dchar[])[10099]).text,
	"&rbrace;": (cast(dchar[])[125]).text,
	"&rbrack;": (cast(dchar[])[93]).text,
	"&rbrke;": (cast(dchar[])[10636]).text,
	"&rbrksld;": (cast(dchar[])[10638]).text,
	"&rbrkslu;": (cast(dchar[])[10640]).text,
	"&rcaron;": (cast(dchar[])[345]).text,
	"&rcedil;": (cast(dchar[])[343]).text,
	"&rceil;": (cast(dchar[])[8969]).text,
	"&rcub;": (cast(dchar[])[125]).text,
	"&rcy;": (cast(dchar[])[1088]).text,
	"&rdca;": (cast(dchar[])[10551]).text,
	"&rdldhar;": (cast(dchar[])[10601]).text,
	"&rdquo;": (cast(dchar[])[8221]).text,
	"&rdquor;": (cast(dchar[])[8221]).text,
	"&rdsh;": (cast(dchar[])[8627]).text,
	"&real;": (cast(dchar[])[8476]).text,
	"&realine;": (cast(dchar[])[8475]).text,
	"&realpart;": (cast(dchar[])[8476]).text,
	"&reals;": (cast(dchar[])[8477]).text,
	"&rect;": (cast(dchar[])[9645]).text,
	"&reg": (cast(dchar[])[174]).text,
	"&reg;": (cast(dchar[])[174]).text,
	"&rfisht;": (cast(dchar[])[10621]).text,
	"&rfloor;": (cast(dchar[])[8971]).text,
	"&rfr;": (cast(dchar[])[120111]).text,
	"&rhard;": (cast(dchar[])[8641]).text,
	"&rharu;": (cast(dchar[])[8640]).text,
	"&rharul;": (cast(dchar[])[10604]).text,
	"&rho;": (cast(dchar[])[961]).text,
	"&rhov;": (cast(dchar[])[1009]).text,
	"&rightarrow;": (cast(dchar[])[8594]).text,
	"&rightarrowtail;": (cast(dchar[])[8611]).text,
	"&rightharpoondown;": (cast(dchar[])[8641]).text,
	"&rightharpoonup;": (cast(dchar[])[8640]).text,
	"&rightleftarrows;": (cast(dchar[])[8644]).text,
	"&rightleftharpoons;": (cast(dchar[])[8652]).text,
	"&rightrightarrows;": (cast(dchar[])[8649]).text,
	"&rightsquigarrow;": (cast(dchar[])[8605]).text,
	"&rightthreetimes;": (cast(dchar[])[8908]).text,
	"&ring;": (cast(dchar[])[730]).text,
	"&risingdotseq;": (cast(dchar[])[8787]).text,
	"&rlarr;": (cast(dchar[])[8644]).text,
	"&rlhar;": (cast(dchar[])[8652]).text,
	"&rlm;": (cast(dchar[])[8207]).text,
	"&rmoust;": (cast(dchar[])[9137]).text,
	"&rmoustache;": (cast(dchar[])[9137]).text,
	"&rnmid;": (cast(dchar[])[10990]).text,
	"&roang;": (cast(dchar[])[10221]).text,
	"&roarr;": (cast(dchar[])[8702]).text,
	"&robrk;": (cast(dchar[])[10215]).text,
	"&ropar;": (cast(dchar[])[10630]).text,
	"&ropf;": (cast(dchar[])[120163]).text,
	"&roplus;": (cast(dchar[])[10798]).text,
	"&rotimes;": (cast(dchar[])[10805]).text,
	"&rpar;": (cast(dchar[])[41]).text,
	"&rpargt;": (cast(dchar[])[10644]).text,
	"&rppolint;": (cast(dchar[])[10770]).text,
	"&rrarr;": (cast(dchar[])[8649]).text,
	"&rsaquo;": (cast(dchar[])[8250]).text,
	"&rscr;": (cast(dchar[])[120007]).text,
	"&rsh;": (cast(dchar[])[8625]).text,
	"&rsqb;": (cast(dchar[])[93]).text,
	"&rsquo;": (cast(dchar[])[8217]).text,
	"&rsquor;": (cast(dchar[])[8217]).text,
	"&rthree;": (cast(dchar[])[8908]).text,
	"&rtimes;": (cast(dchar[])[8906]).text,
	"&rtri;": (cast(dchar[])[9657]).text,
	"&rtrie;": (cast(dchar[])[8885]).text,
	"&rtrif;": (cast(dchar[])[9656]).text,
	"&rtriltri;": (cast(dchar[])[10702]).text,
	"&ruluhar;": (cast(dchar[])[10600]).text,
	"&rx;": (cast(dchar[])[8478]).text,
	"&sacute;": (cast(dchar[])[347]).text,
	"&sbquo;": (cast(dchar[])[8218]).text,
	"&sc;": (cast(dchar[])[8827]).text,
	"&scE;": (cast(dchar[])[10932]).text,
	"&scap;": (cast(dchar[])[10936]).text,
	"&scaron;": (cast(dchar[])[353]).text,
	"&sccue;": (cast(dchar[])[8829]).text,
	"&sce;": (cast(dchar[])[10928]).text,
	"&scedil;": (cast(dchar[])[351]).text,
	"&scirc;": (cast(dchar[])[349]).text,
	"&scnE;": (cast(dchar[])[10934]).text,
	"&scnap;": (cast(dchar[])[10938]).text,
	"&scnsim;": (cast(dchar[])[8937]).text,
	"&scpolint;": (cast(dchar[])[10771]).text,
	"&scsim;": (cast(dchar[])[8831]).text,
	"&scy;": (cast(dchar[])[1089]).text,
	"&sdot;": (cast(dchar[])[8901]).text,
	"&sdotb;": (cast(dchar[])[8865]).text,
	"&sdote;": (cast(dchar[])[10854]).text,
	"&seArr;": (cast(dchar[])[8664]).text,
	"&searhk;": (cast(dchar[])[10533]).text,
	"&searr;": (cast(dchar[])[8600]).text,
	"&searrow;": (cast(dchar[])[8600]).text,
	"&sect": (cast(dchar[])[167]).text,
	"&sect;": (cast(dchar[])[167]).text,
	"&semi;": (cast(dchar[])[59]).text,
	"&seswar;": (cast(dchar[])[10537]).text,
	"&setminus;": (cast(dchar[])[8726]).text,
	"&setmn;": (cast(dchar[])[8726]).text,
	"&sext;": (cast(dchar[])[10038]).text,
	"&sfr;": (cast(dchar[])[120112]).text,
	"&sfrown;": (cast(dchar[])[8994]).text,
	"&sharp;": (cast(dchar[])[9839]).text,
	"&shchcy;": (cast(dchar[])[1097]).text,
	"&shcy;": (cast(dchar[])[1096]).text,
	"&shortmid;": (cast(dchar[])[8739]).text,
	"&shortparallel;": (cast(dchar[])[8741]).text,
	"&shy": (cast(dchar[])[173]).text,
	"&shy;": (cast(dchar[])[173]).text,
	"&sigma;": (cast(dchar[])[963]).text,
	"&sigmaf;": (cast(dchar[])[962]).text,
	"&sigmav;": (cast(dchar[])[962]).text,
	"&sim;": (cast(dchar[])[8764]).text,
	"&simdot;": (cast(dchar[])[10858]).text,
	"&sime;": (cast(dchar[])[8771]).text,
	"&simeq;": (cast(dchar[])[8771]).text,
	"&simg;": (cast(dchar[])[10910]).text,
	"&simgE;": (cast(dchar[])[10912]).text,
	"&siml;": (cast(dchar[])[10909]).text,
	"&simlE;": (cast(dchar[])[10911]).text,
	"&simne;": (cast(dchar[])[8774]).text,
	"&simplus;": (cast(dchar[])[10788]).text,
	"&simrarr;": (cast(dchar[])[10610]).text,
	"&slarr;": (cast(dchar[])[8592]).text,
	"&smallsetminus;": (cast(dchar[])[8726]).text,
	"&smashp;": (cast(dchar[])[10803]).text,
	"&smeparsl;": (cast(dchar[])[10724]).text,
	"&smid;": (cast(dchar[])[8739]).text,
	"&smile;": (cast(dchar[])[8995]).text,
	"&smt;": (cast(dchar[])[10922]).text,
	"&smte;": (cast(dchar[])[10924]).text,
	"&smtes;": (cast(dchar[])[10924, 65024]).text,
	"&softcy;": (cast(dchar[])[1100]).text,
	"&sol;": (cast(dchar[])[47]).text,
	"&solb;": (cast(dchar[])[10692]).text,
	"&solbar;": (cast(dchar[])[9023]).text,
	"&sopf;": (cast(dchar[])[120164]).text,
	"&spades;": (cast(dchar[])[9824]).text,
	"&spadesuit;": (cast(dchar[])[9824]).text,
	"&spar;": (cast(dchar[])[8741]).text,
	"&sqcap;": (cast(dchar[])[8851]).text,
	"&sqcaps;": (cast(dchar[])[8851, 65024]).text,
	"&sqcup;": (cast(dchar[])[8852]).text,
	"&sqcups;": (cast(dchar[])[8852, 65024]).text,
	"&sqsub;": (cast(dchar[])[8847]).text,
	"&sqsube;": (cast(dchar[])[8849]).text,
	"&sqsubset;": (cast(dchar[])[8847]).text,
	"&sqsubseteq;": (cast(dchar[])[8849]).text,
	"&sqsup;": (cast(dchar[])[8848]).text,
	"&sqsupe;": (cast(dchar[])[8850]).text,
	"&sqsupset;": (cast(dchar[])[8848]).text,
	"&sqsupseteq;": (cast(dchar[])[8850]).text,
	"&squ;": (cast(dchar[])[9633]).text,
	"&square;": (cast(dchar[])[9633]).text,
	"&squarf;": (cast(dchar[])[9642]).text,
	"&squf;": (cast(dchar[])[9642]).text,
	"&srarr;": (cast(dchar[])[8594]).text,
	"&sscr;": (cast(dchar[])[120008]).text,
	"&ssetmn;": (cast(dchar[])[8726]).text,
	"&ssmile;": (cast(dchar[])[8995]).text,
	"&sstarf;": (cast(dchar[])[8902]).text,
	"&star;": (cast(dchar[])[9734]).text,
	"&starf;": (cast(dchar[])[9733]).text,
	"&straightepsilon;": (cast(dchar[])[1013]).text,
	"&straightphi;": (cast(dchar[])[981]).text,
	"&strns;": (cast(dchar[])[175]).text,
	"&sub;": (cast(dchar[])[8834]).text,
	"&subE;": (cast(dchar[])[10949]).text,
	"&subdot;": (cast(dchar[])[10941]).text,
	"&sube;": (cast(dchar[])[8838]).text,
	"&subedot;": (cast(dchar[])[10947]).text,
	"&submult;": (cast(dchar[])[10945]).text,
	"&subnE;": (cast(dchar[])[10955]).text,
	"&subne;": (cast(dchar[])[8842]).text,
	"&subplus;": (cast(dchar[])[10943]).text,
	"&subrarr;": (cast(dchar[])[10617]).text,
	"&subset;": (cast(dchar[])[8834]).text,
	"&subseteq;": (cast(dchar[])[8838]).text,
	"&subseteqq;": (cast(dchar[])[10949]).text,
	"&subsetneq;": (cast(dchar[])[8842]).text,
	"&subsetneqq;": (cast(dchar[])[10955]).text,
	"&subsim;": (cast(dchar[])[10951]).text,
	"&subsub;": (cast(dchar[])[10965]).text,
	"&subsup;": (cast(dchar[])[10963]).text,
	"&succ;": (cast(dchar[])[8827]).text,
	"&succapprox;": (cast(dchar[])[10936]).text,
	"&succcurlyeq;": (cast(dchar[])[8829]).text,
	"&succeq;": (cast(dchar[])[10928]).text,
	"&succnapprox;": (cast(dchar[])[10938]).text,
	"&succneqq;": (cast(dchar[])[10934]).text,
	"&succnsim;": (cast(dchar[])[8937]).text,
	"&succsim;": (cast(dchar[])[8831]).text,
	"&sum;": (cast(dchar[])[8721]).text,
	"&sung;": (cast(dchar[])[9834]).text,
	"&sup1": (cast(dchar[])[185]).text,
	"&sup1;": (cast(dchar[])[185]).text,
	"&sup2": (cast(dchar[])[178]).text,
	"&sup2;": (cast(dchar[])[178]).text,
	"&sup3": (cast(dchar[])[179]).text,
	"&sup3;": (cast(dchar[])[179]).text,
	"&sup;": (cast(dchar[])[8835]).text,
	"&supE;": (cast(dchar[])[10950]).text,
	"&supdot;": (cast(dchar[])[10942]).text,
	"&supdsub;": (cast(dchar[])[10968]).text,
	"&supe;": (cast(dchar[])[8839]).text,
	"&supedot;": (cast(dchar[])[10948]).text,
	"&suphsol;": (cast(dchar[])[10185]).text,
	"&suphsub;": (cast(dchar[])[10967]).text,
	"&suplarr;": (cast(dchar[])[10619]).text,
	"&supmult;": (cast(dchar[])[10946]).text,
	"&supnE;": (cast(dchar[])[10956]).text,
	"&supne;": (cast(dchar[])[8843]).text,
	"&supplus;": (cast(dchar[])[10944]).text,
	"&supset;": (cast(dchar[])[8835]).text,
	"&supseteq;": (cast(dchar[])[8839]).text,
	"&supseteqq;": (cast(dchar[])[10950]).text,
	"&supsetneq;": (cast(dchar[])[8843]).text,
	"&supsetneqq;": (cast(dchar[])[10956]).text,
	"&supsim;": (cast(dchar[])[10952]).text,
	"&supsub;": (cast(dchar[])[10964]).text,
	"&supsup;": (cast(dchar[])[10966]).text,
	"&swArr;": (cast(dchar[])[8665]).text,
	"&swarhk;": (cast(dchar[])[10534]).text,
	"&swarr;": (cast(dchar[])[8601]).text,
	"&swarrow;": (cast(dchar[])[8601]).text,
	"&swnwar;": (cast(dchar[])[10538]).text,
	"&szlig": (cast(dchar[])[223]).text,
	"&szlig;": (cast(dchar[])[223]).text,
	"&target;": (cast(dchar[])[8982]).text,
	"&tau;": (cast(dchar[])[964]).text,
	"&tbrk;": (cast(dchar[])[9140]).text,
	"&tcaron;": (cast(dchar[])[357]).text,
	"&tcedil;": (cast(dchar[])[355]).text,
	"&tcy;": (cast(dchar[])[1090]).text,
	"&tdot;": (cast(dchar[])[8411]).text,
	"&telrec;": (cast(dchar[])[8981]).text,
	"&tfr;": (cast(dchar[])[120113]).text,
	"&there4;": (cast(dchar[])[8756]).text,
	"&therefore;": (cast(dchar[])[8756]).text,
	"&theta;": (cast(dchar[])[952]).text,
	"&thetasym;": (cast(dchar[])[977]).text,
	"&thetav;": (cast(dchar[])[977]).text,
	"&thickapprox;": (cast(dchar[])[8776]).text,
	"&thicksim;": (cast(dchar[])[8764]).text,
	"&thinsp;": (cast(dchar[])[8201]).text,
	"&thkap;": (cast(dchar[])[8776]).text,
	"&thksim;": (cast(dchar[])[8764]).text,
	"&thorn": (cast(dchar[])[254]).text,
	"&thorn;": (cast(dchar[])[254]).text,
	"&tilde;": (cast(dchar[])[732]).text,
	"&times": (cast(dchar[])[215]).text,
	"&times;": (cast(dchar[])[215]).text,
	"&timesb;": (cast(dchar[])[8864]).text,
	"&timesbar;": (cast(dchar[])[10801]).text,
	"&timesd;": (cast(dchar[])[10800]).text,
	"&tint;": (cast(dchar[])[8749]).text,
	"&toea;": (cast(dchar[])[10536]).text,
	"&top;": (cast(dchar[])[8868]).text,
	"&topbot;": (cast(dchar[])[9014]).text,
	"&topcir;": (cast(dchar[])[10993]).text,
	"&topf;": (cast(dchar[])[120165]).text,
	"&topfork;": (cast(dchar[])[10970]).text,
	"&tosa;": (cast(dchar[])[10537]).text,
	"&tprime;": (cast(dchar[])[8244]).text,
	"&trade;": (cast(dchar[])[8482]).text,
	"&triangle;": (cast(dchar[])[9653]).text,
	"&triangledown;": (cast(dchar[])[9663]).text,
	"&triangleleft;": (cast(dchar[])[9667]).text,
	"&trianglelefteq;": (cast(dchar[])[8884]).text,
	"&triangleq;": (cast(dchar[])[8796]).text,
	"&triangleright;": (cast(dchar[])[9657]).text,
	"&trianglerighteq;": (cast(dchar[])[8885]).text,
	"&tridot;": (cast(dchar[])[9708]).text,
	"&trie;": (cast(dchar[])[8796]).text,
	"&triminus;": (cast(dchar[])[10810]).text,
	"&triplus;": (cast(dchar[])[10809]).text,
	"&trisb;": (cast(dchar[])[10701]).text,
	"&tritime;": (cast(dchar[])[10811]).text,
	"&trpezium;": (cast(dchar[])[9186]).text,
	"&tscr;": (cast(dchar[])[120009]).text,
	"&tscy;": (cast(dchar[])[1094]).text,
	"&tshcy;": (cast(dchar[])[1115]).text,
	"&tstrok;": (cast(dchar[])[359]).text,
	"&twixt;": (cast(dchar[])[8812]).text,
	"&twoheadleftarrow;": (cast(dchar[])[8606]).text,
	"&twoheadrightarrow;": (cast(dchar[])[8608]).text,
	"&uArr;": (cast(dchar[])[8657]).text,
	"&uHar;": (cast(dchar[])[10595]).text,
	"&uacute": (cast(dchar[])[250]).text,
	"&uacute;": (cast(dchar[])[250]).text,
	"&uarr;": (cast(dchar[])[8593]).text,
	"&ubrcy;": (cast(dchar[])[1118]).text,
	"&ubreve;": (cast(dchar[])[365]).text,
	"&ucirc": (cast(dchar[])[251]).text,
	"&ucirc;": (cast(dchar[])[251]).text,
	"&ucy;": (cast(dchar[])[1091]).text,
	"&udarr;": (cast(dchar[])[8645]).text,
	"&udblac;": (cast(dchar[])[369]).text,
	"&udhar;": (cast(dchar[])[10606]).text,
	"&ufisht;": (cast(dchar[])[10622]).text,
	"&ufr;": (cast(dchar[])[120114]).text,
	"&ugrave": (cast(dchar[])[249]).text,
	"&ugrave;": (cast(dchar[])[249]).text,
	"&uharl;": (cast(dchar[])[8639]).text,
	"&uharr;": (cast(dchar[])[8638]).text,
	"&uhblk;": (cast(dchar[])[9600]).text,
	"&ulcorn;": (cast(dchar[])[8988]).text,
	"&ulcorner;": (cast(dchar[])[8988]).text,
	"&ulcrop;": (cast(dchar[])[8975]).text,
	"&ultri;": (cast(dchar[])[9720]).text,
	"&umacr;": (cast(dchar[])[363]).text,
	"&uml": (cast(dchar[])[168]).text,
	"&uml;": (cast(dchar[])[168]).text,
	"&uogon;": (cast(dchar[])[371]).text,
	"&uopf;": (cast(dchar[])[120166]).text,
	"&uparrow;": (cast(dchar[])[8593]).text,
	"&updownarrow;": (cast(dchar[])[8597]).text,
	"&upharpoonleft;": (cast(dchar[])[8639]).text,
	"&upharpoonright;": (cast(dchar[])[8638]).text,
	"&uplus;": (cast(dchar[])[8846]).text,
	"&upsi;": (cast(dchar[])[965]).text,
	"&upsih;": (cast(dchar[])[978]).text,
	"&upsilon;": (cast(dchar[])[965]).text,
	"&upuparrows;": (cast(dchar[])[8648]).text,
	"&urcorn;": (cast(dchar[])[8989]).text,
	"&urcorner;": (cast(dchar[])[8989]).text,
	"&urcrop;": (cast(dchar[])[8974]).text,
	"&uring;": (cast(dchar[])[367]).text,
	"&urtri;": (cast(dchar[])[9721]).text,
	"&uscr;": (cast(dchar[])[120010]).text,
	"&utdot;": (cast(dchar[])[8944]).text,
	"&utilde;": (cast(dchar[])[361]).text,
	"&utri;": (cast(dchar[])[9653]).text,
	"&utrif;": (cast(dchar[])[9652]).text,
	"&uuarr;": (cast(dchar[])[8648]).text,
	"&uuml": (cast(dchar[])[252]).text,
	"&uuml;": (cast(dchar[])[252]).text,
	"&uwangle;": (cast(dchar[])[10663]).text,
	"&vArr;": (cast(dchar[])[8661]).text,
	"&vBar;": (cast(dchar[])[10984]).text,
	"&vBarv;": (cast(dchar[])[10985]).text,
	"&vDash;": (cast(dchar[])[8872]).text,
	"&vangrt;": (cast(dchar[])[10652]).text,
	"&varepsilon;": (cast(dchar[])[1013]).text,
	"&varkappa;": (cast(dchar[])[1008]).text,
	"&varnothing;": (cast(dchar[])[8709]).text,
	"&varphi;": (cast(dchar[])[981]).text,
	"&varpi;": (cast(dchar[])[982]).text,
	"&varpropto;": (cast(dchar[])[8733]).text,
	"&varr;": (cast(dchar[])[8597]).text,
	"&varrho;": (cast(dchar[])[1009]).text,
	"&varsigma;": (cast(dchar[])[962]).text,
	"&varsubsetneq;": (cast(dchar[])[8842, 65024]).text,
	"&varsubsetneqq;": (cast(dchar[])[10955, 65024]).text,
	"&varsupsetneq;": (cast(dchar[])[8843, 65024]).text,
	"&varsupsetneqq;": (cast(dchar[])[10956, 65024]).text,
	"&vartheta;": (cast(dchar[])[977]).text,
	"&vartriangleleft;": (cast(dchar[])[8882]).text,
	"&vartriangleright;": (cast(dchar[])[8883]).text,
	"&vcy;": (cast(dchar[])[1074]).text,
	"&vdash;": (cast(dchar[])[8866]).text,
	"&vee;": (cast(dchar[])[8744]).text,
	"&veebar;": (cast(dchar[])[8891]).text,
	"&veeeq;": (cast(dchar[])[8794]).text,
	"&vellip;": (cast(dchar[])[8942]).text,
	"&verbar;": (cast(dchar[])[124]).text,
	"&vert;": (cast(dchar[])[124]).text,
	"&vfr;": (cast(dchar[])[120115]).text,
	"&vltri;": (cast(dchar[])[8882]).text,
	"&vnsub;": (cast(dchar[])[8834, 8402]).text,
	"&vnsup;": (cast(dchar[])[8835, 8402]).text,
	"&vopf;": (cast(dchar[])[120167]).text,
	"&vprop;": (cast(dchar[])[8733]).text,
	"&vrtri;": (cast(dchar[])[8883]).text,
	"&vscr;": (cast(dchar[])[120011]).text,
	"&vsubnE;": (cast(dchar[])[10955, 65024]).text,
	"&vsubne;": (cast(dchar[])[8842, 65024]).text,
	"&vsupnE;": (cast(dchar[])[10956, 65024]).text,
	"&vsupne;": (cast(dchar[])[8843, 65024]).text,
	"&vzigzag;": (cast(dchar[])[10650]).text,
	"&wcirc;": (cast(dchar[])[373]).text,
	"&wedbar;": (cast(dchar[])[10847]).text,
	"&wedge;": (cast(dchar[])[8743]).text,
	"&wedgeq;": (cast(dchar[])[8793]).text,
	"&weierp;": (cast(dchar[])[8472]).text,
	"&wfr;": (cast(dchar[])[120116]).text,
	"&wopf;": (cast(dchar[])[120168]).text,
	"&wp;": (cast(dchar[])[8472]).text,
	"&wr;": (cast(dchar[])[8768]).text,
	"&wreath;": (cast(dchar[])[8768]).text,
	"&wscr;": (cast(dchar[])[120012]).text,
	"&xcap;": (cast(dchar[])[8898]).text,
	"&xcirc;": (cast(dchar[])[9711]).text,
	"&xcup;": (cast(dchar[])[8899]).text,
	"&xdtri;": (cast(dchar[])[9661]).text,
	"&xfr;": (cast(dchar[])[120117]).text,
	"&xhArr;": (cast(dchar[])[10234]).text,
	"&xharr;": (cast(dchar[])[10231]).text,
	"&xi;": (cast(dchar[])[958]).text,
	"&xlArr;": (cast(dchar[])[10232]).text,
	"&xlarr;": (cast(dchar[])[10229]).text,
	"&xmap;": (cast(dchar[])[10236]).text,
	"&xnis;": (cast(dchar[])[8955]).text,
	"&xodot;": (cast(dchar[])[10752]).text,
	"&xopf;": (cast(dchar[])[120169]).text,
	"&xoplus;": (cast(dchar[])[10753]).text,
	"&xotime;": (cast(dchar[])[10754]).text,
	"&xrArr;": (cast(dchar[])[10233]).text,
	"&xrarr;": (cast(dchar[])[10230]).text,
	"&xscr;": (cast(dchar[])[120013]).text,
	"&xsqcup;": (cast(dchar[])[10758]).text,
	"&xuplus;": (cast(dchar[])[10756]).text,
	"&xutri;": (cast(dchar[])[9651]).text,
	"&xvee;": (cast(dchar[])[8897]).text,
	"&xwedge;": (cast(dchar[])[8896]).text,
	"&yacute": (cast(dchar[])[253]).text,
	"&yacute;": (cast(dchar[])[253]).text,
	"&yacy;": (cast(dchar[])[1103]).text,
	"&ycirc;": (cast(dchar[])[375]).text,
	"&ycy;": (cast(dchar[])[1099]).text,
	"&yen": (cast(dchar[])[165]).text,
	"&yen;": (cast(dchar[])[165]).text,
	"&yfr;": (cast(dchar[])[120118]).text,
	"&yicy;": (cast(dchar[])[1111]).text,
	"&yopf;": (cast(dchar[])[120170]).text,
	"&yscr;": (cast(dchar[])[120014]).text,
	"&yucy;": (cast(dchar[])[1102]).text,
	"&yuml": (cast(dchar[])[255]).text,
	"&yuml;": (cast(dchar[])[255]).text,
	"&zacute;": (cast(dchar[])[378]).text,
	"&zcaron;": (cast(dchar[])[382]).text,
	"&zcy;": (cast(dchar[])[1079]).text,
	"&zdot;": (cast(dchar[])[380]).text,
	"&zeetrf;": (cast(dchar[])[8488]).text,
	"&zeta;": (cast(dchar[])[950]).text,
	"&zfr;": (cast(dchar[])[120119]).text,
	"&zhcy;": (cast(dchar[])[1078]).text,
	"&zigrarr;": (cast(dchar[])[8669]).text,
	"&zopf;": (cast(dchar[])[120171]).text,
	"&zscr;": (cast(dchar[])[120015]).text,
	"&zwj;": (cast(dchar[])[8205]).text,
	"&zwnj;": (cast(dchar[])[8204]).text,
]
